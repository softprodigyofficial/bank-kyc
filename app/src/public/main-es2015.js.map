{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","(webpack)/buildin/global.js","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_helpers/role_auth.guard.ts","./src/app/_services/authentication.service.ts","./src/app/_services/bank.service.ts","./src/app/_services/ethereum.service.ts","./src/app/_services/index.ts","./src/app/_services/user.service.ts","./src/app/add-bank/add-bank.component.ts","./src/app/add-bank/add-bank.component.html","./src/app/add-request/add-request.component.ts","./src/app/add-request/add-request.component.html","./src/app/admin-login/admin-login.component.ts","./src/app/admin-login/admin-login.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-customer/edit-customer.component.ts","./src/app/edit-customer/edit-customer.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/list-bank/list-bank.component.ts","./src/app/list-bank/list-bank.component.html","./src/app/list-request/list-request.component.ts","./src/app/list-request/list-request.component.html","./src/app/password-customer/password-customer.component.ts","./src/app/password-customer/password-customer.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/view-bank/view-bank.component.ts","./src/app/view-bank/view-bank.component.html","./src/app/view-request/view-request.component.ts","./src/app/view-request/view-request.component.html","./src/environments/environment.ts","./src/main.ts","buffer (ignored)","util (ignored)","webpack:///util (ignored)?e312","crypto (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \nUrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(\n    public authenticationService : AuthenticationService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.isLoggedIn() !== true) {\n      this.router.navigate(['login']);\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService : AuthenticationService ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const accessToken = this.authenticationService.getAccessToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: `JWT $[accessToken}`,\n                'Cache-Control': 'no-cache',\n                Pragma: 'no-cache' \n            }\n        });\n        return next.handle(req);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.interceptor';\nexport * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './role_auth.guard';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \nUrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleAuthGuard implements CanActivate {\n  \n  constructor(\n    public authenticationService : AuthenticationService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.currentUserValue.role_id !== 1) {\n      this.router.navigate(['home']);\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n  endpoint: string = `${environment.apiUrl}`;\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, public router: Router) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  adminLogin(email, password){\n  \tlet api_url = `${this.endpoint}/v1/admin/login`;\n  \tconst data = {\n        email, password\n  \t};\n\n    return this.http.post<any>(api_url, data).pipe(map((res: any) => {\n        if(res.data){\n          localStorage.setItem('access_token', res.data.user.id);\n          localStorage.setItem('currentUser', JSON.stringify(res.data.user));\n          this.currentUserSubject.next(res.data.user);\n        }\n        return res.data;\n    }));\n\n  }\n\n  getAccessToken(){\n  \treturn localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null && localStorage.removeItem('currentUser') == null) {\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Bank, User, BankRequest } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class BankService{\n\t\n\theaders = new HttpHeaders().set('Content-Type', 'application/json');\n\tconstructor(private http: HttpClient) { }\n\n\taddBank(name: string, wallet_address: string, rgNumber: string, email: string, password: string): Observable<Bank>{\n\t\treturn this.http.post<Bank>(`${environment.apiUrl}/v1/bank/add`, {name: name, wallet_address: wallet_address, rn: rgNumber, email: email, password: password });\n\t}\n\n\tlistBank():Observable<Bank>{\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/list`);\n\t}\n\n\tviewBank(wallet_address: string): Observable<Bank>{\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/show/${wallet_address}`);\n\t}\n\n\tdeleteBank(wallet_address: string): Observable<Bank>{\n\t   return this.http.post<Bank>(`${environment.apiUrl}/v1/bank/delete`,{wallet_address: wallet_address});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { environment } from '@environments/environment';\n\ndeclare let require: any;\ndeclare let window: any;\ndeclare let ethereum: any;\n\nlet kyc = require('./kyc.json');\nconst Web3 = require('web3');\n\n@Injectable({ providedIn: 'root' })\nexport class EthereumService {\n  public web3: any;\n  private contract: any;\n  private accounts: string[];\n  public ready = false;\n\n  public accountsObservable = new Subject<string[]>();\n\n    constructor() { this.kycWeb3(); }\n\n    private async enableAccounts() {\n\t    if (window.ethereum) {\n\t      window.web3 = new Web3(ethereum);\n\t      try {\n\t        // Request account access if needed\n\t        await ethereum.enable();\n\t      } catch (error) {\n\t        // User denied account access...\n\t      }\n\t    }\n    }\n\n    public kycWeb3(){\n      if (typeof window.web3 !== 'undefined') {\n         this.web3 = new Web3(new Web3(window.web3.currentProvider));\n      } else {\n          Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n          this.web3 = new Web3(new Web3.providers.HttpProvider(environment.RPCProvider));\n          //console.log(this.web3);\n      }\n\n      console.log(\"this web3\", this.web3);\n      this.enableAccounts().then(() => {\n        this.refreshAccounts();\n      });\n\n      this.contract = new this.web3.eth.Contract(kyc, environment.ContractAddress);\n\n\t   }\n\n    public getProvider() {\n       return this.web3.currentProvider;\n    }\n\n    public getAccount() {\n      if (!this.accounts) {\n        console.log('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n        return null;\n      }\n      return this.accounts[0];\n    }\n\n    public refreshAccounts = () => {\n       if (typeof window.web3 !== 'undefined') {\n\t      this.web3.eth.getAccounts((err, accs) => {\n\t        if (err != null) {\n\t          console.warn('There was an error fetching your accounts.');\n\t          return;\n\t        }\n\n\t        // Get the initial account balance so it can be displayed.\n\t        if (accs.length === 0) {\n\t          console.warn('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n\t          return;\n\t        }\n\n\t        if (!this.accounts || this.accounts.length !== accs.length || this.accounts[0] !== accs[0]) {\n\t          console.log('Observed new accounts');\n\n\t          this.accountsObservable.next(accs);\n\t          this.accounts = accs;\n\t          console.log(\"ffffff\",this.accounts);\n\t        }\n\n\t        this.ready = true;\n\t      });\n        }\n    };\n\n    public getBank(wallet_address: string): Promise<any>{\n   \t   return this.contract.methods.getBank(wallet_address).call();\n    }\n\n    public getBankRating(wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getBankRating(wallet_address).call();\n    }\n\n    public async upvotebank(wallet_address: string, bank_session_wallet_address: string): Promise<any>{\n       let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n       return this.contract.methods.upvoteBank(wallet_address).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async addRequest(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.addRequest(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce: nonce, from: bank_session_wallet_address});\n    }\n\n    public getBankRequest(wallet_address: string, index: number): Promise<any>{\n    \t  //console.log(this.web3.eth.getAccounts());\n    \t  console.log(\"ddatta\", wallet_address, index);\n    \treturn this.contract.methods.getBankRequest(wallet_address, index).call({from: wallet_address});\n    }\n\n    public getBankRequestsNum(wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getBankRequestsNum(wallet_address).call({from: wallet_address});\n    }\n\n    public async removeRequest(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.removeRequest(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async addCustomer(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.addCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async upvoteCust(username: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.upvoteCust(Web3.utils.asciiToHex(username)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public viewCustomer(username: string, password: string, bank_session_wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.viewCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password)).call({from: bank_session_wallet_address});\n    }\n\n    public getCustRating(username: string, bank_session_wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getCustRating(Web3.utils.asciiToHex(username)).call({from: bank_session_wallet_address});\n    }\n\n    public async modifyCustomer(username: string, password: string, data: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.modifyCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async removeCustomer(username: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.removeCustomer(Web3.utils.asciiToHex(username)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async setCustPassword(username: string, password: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.setCustPassword(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public customerAccessHistory(username: string, bank_session_wallet_address:string): Promise<any>{\n      return this.contract.methods.accessHistory(Web3.utils.asciiToHex(username)).call({from: bank_session_wallet_address});\n    }\n\n}\n","export * from './authentication.service';\nexport * from './user.service';\nexport * from './bank.service';\nexport * from './ethereum.service';\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class UserService{\n\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n\t\tconstructor(private http: HttpClient) { }\n\n    getById(id: number) {\n      //var d = new Date();\n      return this.http.get<User>(`${environment.apiUrl}/v1/user/${id}`);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-bank',\n  templateUrl: './add-bank.component.html',\n  styleUrls: ['./add-bank.component.css']\n})\nexport class AddBankComponent implements OnInit {\n  bankAddForm: FormGroup;\n  currentUser: User;\n\n    constructor(\n  \tprivate fb: FormBuilder,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService) {\n  \t   this.bankForm();\n  \t   this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    bankForm(){\n        this.bankAddForm = this.fb.group({\n          name: ['', Validators.required],\n          walletAddress: ['', Validators.required],\n          rgNumber: ['', Validators.required],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', Validators.required]\n        });\n    }\n\n    addBank(name, wallet_address, rgNumber, email, password){\n      console.log(\"name\", name, wallet_address,rgNumber,email,password);\n       this.bankService.addBank(name, wallet_address, rgNumber, email, password).pipe(first()).subscribe((res:any)=>{\n        if(res.success ==  1){\n            alert(\"Bank added successfully\");\n            this.router.navigate(['banks']);\n        } else {\n          console.log(\"Something went wrong\");\n          console.log(res);\n        }\n      }, error =>{\n        console.log(error);\n        alert(error.message);\n      });\n    }\n\n    ngOnInit(): void { }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Add Bank</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankAddForm\" novalidate>\n           \t     <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Bank Name</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['name'].invalid && (bankAddForm.controls['name'].dirty || bankAddForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['name'].errors.required\">  \n\t                    Bank name is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"walletAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"walletAddress\" #walletAddress>\n\t                    <label for=\"walletAddress\">Wallet Address</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['walletAddress'].invalid && (bankAddForm.controls['walletAddress'].dirty || bankAddForm.controls['walletAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['walletAddress'].errors.required\">  \n\t                    Wallet address is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"rgNumber\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"rgNumber\" #rgNumber>\n\t                    <label for=\"rgNumber\">Register Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['rgNumber'].invalid && (bankAddForm.controls['rgNumber'].dirty || bankAddForm.controls['rgNumber'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['rgNumber'].errors.required\">  \n\t                    Register number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"email\" #email>\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['email'].invalid && (bankAddForm.controls['email'].dirty || bankAddForm.controls['email'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['email'].errors.required\">  \n                      Email is required.  \n                    </span> \n                    <span *ngIf=\"bankAddForm.controls['email'].errors.email\">Enter a valid email address</span> \n                  </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"password\" #password>\n                    <label for=\"password\">Password</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['password'].invalid && (bankAddForm.controls['password'].dirty || bankAddForm.controls['password'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['password'].errors.required\">  \n                      Password is required.  \n                    </span> \n                  </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBank(name.value, walletAddress.value, rgNumber.value, email.value, password.value)\"  [disabled]=\"bankAddForm.pristine || bankAddForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-request',\n  templateUrl: './add-request.component.html',\n  styleUrls: ['./add-request.component.css']\n})\nexport class AddRequestComponent implements OnInit {\n  bankRequestForm: FormGroup;\n  currentUser: User;\n\n  constructor(\n  \tprivate fb: FormBuilder,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) {\n  \tthis.bankForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n\n    console.log(this.currentUser.role_id);\n    if(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n  bankForm(){\n    this.bankRequestForm = this.fb.group({\n      name: ['', Validators.required],\n      adharAddress: ['', Validators.required],\n    });\n  }\n\n  addBankRequest(name, adhareAddress){\n    this.ethereumService.addRequest(name, adhareAddress, this.currentUser.bank.wallet_address)\n    .then(async(result)=>{\n      console.log(result);\n      alert(\"Request for KYC has been added successfully.\");\n      this.router.navigate(['banks/requests']);\n    }).catch((error) =>{\n      console.log(\"error\", error.message);\n      alert(\"You have already requested for KYC\");\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Request KYC</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankRequestForm\" novalidate>\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"bankRequestForm.controls['name'].invalid && (bankRequestForm.controls['name'].dirty || bankRequestForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankRequestForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"adharAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"adharAddress\" #adharAddress>\n\t                    <label for=\"adharAddress\">Adhar Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankRequestForm.controls['adharAddress'].invalid && (bankRequestForm.controls['adharAddress'].dirty || bankRequestForm.controls['adharAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankRequestForm.controls['adharAddress'].errors.required\">  \n\t                    Adhar number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBankRequest(name.value, adharAddress.value)\"  [disabled]=\"bankRequestForm.pristine || bankRequestForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms'; \nimport { AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport Web3 from 'web3';\n\ndeclare let window: any;\n//declare let ethereum: any;\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  web3: Web3 |  undefined = undefined;\n  adminLoginForm: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder, \n    private login: AuthenticationService, \n    public router: Router\n    ) { \n    this.loginForm();\n    if(this.login.isLoggedIn() == true){\n       this.router.navigate(['home']);\n    }\n  }\n\n  loginForm(){\n    this.adminLoginForm = this.fb.group({\n      inputEmail: ['', [Validators.required, Validators.email]],\n      inputPassword: ['', Validators.required] \n    });\n  }\n\n  adminLogin(inputEmail, inputPassword){\n  \tthis.login.adminLogin(inputEmail, inputPassword)\n    .pipe(first())\n    .subscribe(data => {\n      this.router.navigate(['home']);\n    });\n  }\n\n  walletLogin = async () =>{\n    if (!window.ethereum){\n       alert(\"Please install MetaMask first.\");\n    }\n      \n    if (!this.web3) {\n      try {\n        // Request account access if needed\n        await (window).ethereum.enable();\n\n        // We don't know window.web3 version, so we use our own instance of Web3\n        // with the injected provider given by MetaMask\n        this.web3 = new Web3((window).ethereum);\n      } catch (error) {\n        window.alert('You need to allow MetaMask.');\n        return;\n      }\n    }\n\n\n    const coinbase = await this.web3.eth.getCoinbase();\n    console.log(\"adddress\", coinbase);\n    if (!coinbase) {\n      alert('Please activate MetaMask first.');\n      return;\n    }\n\n    let nonce = this.web3.eth.getTransactionCount(coinbase);\n    const signature = await this.web3.eth.personal.sign(`I am signing my one-time nonce: ${nonce}`,\n        coinbase,\n        '' // MetaMask will ignore the password argument here\n      );\n\n    console.log(\"signature\", signature);\n\n  }\n\n  ngOnInit(): void {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.add('bg-dark');\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card card-login mx-auto mt-5\">\n    <div class=\"card-header\">Login</div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"adminLoginForm\" novalidate>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" autofocus=\"autofocus\" formControlName=\"inputEmail\" id=\"inputEmail\" #inputEmail>\n            <label for=\"inputEmail\">Email address</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputEmail'].invalid && (adminLoginForm.controls['inputEmail'].dirty || adminLoginForm.controls['inputEmail'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.required\">\n              Email is required.\n            </span>\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.email\">Enter a valid email address</span>\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"inputPassword\" id=\"inputPassword\" #inputPassword>\n            <label for=\"inputPassword\">Password</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputPassword'].invalid && (adminLoginForm.controls['inputPassword'].dirty || adminLoginForm.controls['inputPassword'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputPassword'].errors.required\">\n              Password is required.\n            </span>\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" value=\"remember-me\">\n              Remember Password\n            </label>\n          </div>\n        </div>\n        <button type=\"submit\"  (click)=\"adminLogin(inputEmail.value, inputPassword.value)\" class=\"btn btn-primary btn-block\"   [disabled]=\"adminLoginForm.pristine || adminLoginForm.invalid\" >Login</button>\n      </form>\n      <div class=\"text-center\">\n        <!-- <a class=\"d-block small mt-3\" href=\"javascript:void(0);\" (click)=\"walletLogin();\">login with metamask</a> -->\n        <a class=\"d-block small\" href=\"forgot-password.html\">Forgot Password?</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { ListRequestComponent } from './list-request/list-request.component';\nimport { ViewRequestComponent } from './view-request/view-request.component';\nimport { AddRequestComponent } from './add-request/add-request.component';\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\nimport { PasswordCustomerComponent } from './password-customer/password-customer.component';\nimport { AuthGuard, RoleAuthGuard } from '@app/_helpers';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'login', component: AdminLoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'banks/add', component: AddBankComponent, canActivate: [AuthGuard, RoleAuthGuard] },\n  { path: 'banks', component: ListBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/view/:walletAddress', component: ViewBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests/add', component: AddRequestComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests', component: ListRequestComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests/view/:walletAddress/:index', component: ViewRequestComponent, canActivate: [AuthGuard] },\n  { path: 'customers/edit/:id/:username', component: EditCustomerComponent, canActivate: [AuthGuard] },\n  { path: 'customers/password/:id/:username', component: PasswordCustomerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'angular-app';\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  logout() {\n  \tthis.authenticationService.logout();\n  \tthis.router.navigate(['/login']);\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthInterceptor, ErrorInterceptor } from '@app/_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { AddRequestComponent } from './add-request/add-request.component';\nimport { ViewRequestComponent } from './view-request/view-request.component';\nimport { ListRequestComponent } from './list-request/list-request.component';\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\nimport { PasswordCustomerComponent } from './password-customer/password-customer.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    SidebarComponent,\n    FooterComponent,\n    AdminLoginComponent,\n    AddBankComponent,\n    ListBankComponent,\n    ViewBankComponent,\n    AddRequestComponent,\n    ViewRequestComponent,\n    ListRequestComponent,\n    EditCustomerComponent,\n    PasswordCustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Customer } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n  editCustomerForm: FormGroup;\n  currentUser: User;\n  customerData: Customer;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) {\n  \tthis.customerForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n\n  \tif(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n  customerForm(){\n  \tthis.editCustomerForm = this.fb.group({\n        name: ['', Validators.required],\n        adharAddress: ['', Validators.required],\n    });\n  }\n\n\n  editCustomer(username, data){\n    this.ethereumService.modifyCustomer(username, this.customerData.password, data, this.currentUser.bank.wallet_address)\n    .then((result)=>{\n      alert(\"You have modified customer data successfully\");\n      this.router.navigate(['customers/view']);\n    }).catch((error)=>{\n       console.log(\"edit error\", error);\n    });\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => {\n  \t\tthis.ethereumService.viewCustomer(params['id'], params['username'], this.currentUser.bank.wallet_address)\n      .then((res)=>{\n      \tthis.customerData = res;\n      \tthis.editCustomerForm.setValue({\n      \t\tname: res.data.username,\n      \t\tadharAddress: res.data.user_data\n      \t});\n  \t\t}).catch(error=>{\n        alert(error);\n        console.log(\"eroor\", error);\n  \t\t});\n  \t});\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Edit customer</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"editCustomerForm\" novalidate *ngIf=\"customerData\">\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name readonly>\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"editCustomerForm.controls['name'].invalid && (editCustomerForm.controls['name'].dirty || editCustomerForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"editCustomerForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"adharAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"adharAddress\" #adharAddress>\n\t                    <label for=\"adharAddress\">Adhar Number</label>\n\t                </div>\n\t                <p *ngIf=\"editCustomerForm.controls['adharAddress'].invalid && (editCustomerForm.controls['adharAddress'].dirty || editCustomerForm.controls['adharAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"editCustomerForm.controls['adharAddress'].errors.required\">  \n\t                    Adhar number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"editCustomer(name.value, adharAddress.value)\"  [disabled]=\"editCustomerForm.invalid\">Save</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sticky Footer -->\n<footer class=\"sticky-footer\">\n  <div class=\"container my-auto\">\n      <div class=\"copyright text-center my-auto\">\n        <span>Copyright © Your Website 2018</span>\n      </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: User;\n  bankCount = 0;\n\n  constructor(\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService \n  \t) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n  \n  ngOnInit(){\n    if(this.currentUser.role_id == 2){\n      this.ethereumService.getBankRequestsNum(this.currentUser.bank.wallet_address).then((result) => {\n        this.bankCount = result;\n      }).catch((error) => {\n          console.log(\"Error of getBankRequestsNum\", error);\n      }); \n    }\n  \t\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark static-top\">\n\n     <a class=\"navbar-brand mr-1\" href=\"index.html\">Start Bootstrap</a>\n\n     <button class=\"btn btn-link btn-sm text-white order-1 order-sm-0\" id=\"sidebarToggle\" href=\"#\">\n       <i class=\"fas fa-bars\"></i>\n     </button>\n\n     <!-- Navbar Search -->\n     <form class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n       <div class=\"input-group\">\n         <!--<input type=\"text\" class=\"form-control\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n         <div class=\"input-group-append\">\n           <button class=\"btn btn-primary\" type=\"button\">\n             <i class=\"fas fa-search\"></i>\n           </button>\n         </div>-->\n       </div>\n     </form>\n\n     <!-- Navbar -->\n     <ul class=\"navbar-nav ml-auto ml-md-0\">\n       <!--<li class=\"nav-item dropdown no-arrow mx-1\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          <span class=\"badge badge-danger\">{{ bankCount }}</span><i class=\"fas fa-bell fa-fw\"></i>\n          </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"alertsDropdown\">\n           <a class=\"dropdown-item\" routerLink=\"/banks/requests\">You have {{ bankCount }} bank {{ (bankCount > 1) ? 'requests' : 'request' }}</a>\n         </div>\n       </li>-->\n       \n       <li class=\"nav-item dropdown no-arrow\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-user-circle fa-fw\"></i>\n         </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\n           <a class=\"dropdown-item\" href=\"#\">Settings</a>\n           <a class=\"dropdown-item\" href=\"#\">Activity Log</a>\n           <div class=\"dropdown-divider\"></div>\n           <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n         </div>\n       </li>\n     </ul>\n\n   </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, AuthenticationService } from '@app/_services';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  currentUser: User;\n  userFromApi: User;\n  \n  constructor(private userService: UserService, private authenticationService: AuthenticationService) { \n    this.currentUser = this.authenticationService.currentUserValue;\n    console.log(this.currentUser);\n  }\n\n  ngOnInit(){\n\n  \tconst body = document.getElementsByTagName('body')[0];\n    body.classList.remove('bg-dark');\n\n    this.loading = true;\n    this.userService.getById(this.currentUser.id).pipe(first()).subscribe( (user: any) => {\n      this.loading = false;\n      this.userFromApi = user.data;\n    });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n\n         <!-- Breadcrumbs-->\n         <ol class=\"breadcrumb\">\n           <li class=\"breadcrumb-item\">\n             <a href=\"/\">Dashboard</a>\n           </li>\n         </ol>\n\n         <div class=\"row\">\n            <div class=\"col-md-12 col-xl-12 col-sm-12\">\n              <div class=\"card mt-4\">\n                <h4 class=\"card-header\">Home</h4>\n                <div class=\"card-body\">\n                  <p>Your role is: <strong >{{ (currentUser.role_id == 1)? 'Admin' : 'Bank' }}</strong>.</p>\n                  <p *ngIf=\"userFromApi\" class=\"mb-1\">\n                    Current user from secure api end point: {{userFromApi.email}}\n                  </p>\n                </div>\n              </div>\n            </div>\n         </div>\n\n\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-bank',\n  templateUrl: './list-bank.component.html',\n  styleUrls: ['./list-bank.component.css']\n})\nexport class ListBankComponent implements OnInit {\n  currentUser: User;\n  banksList:Array<Bank>;\n  \n  constructor(\n  private spinner: NgxSpinnerService,\n  private bankService: BankService, \n  public router: Router, \n  private authenticationService: AuthenticationService,\n  private ethereumService: EthereumService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    console.log(this.currentUser);\n  }\n\n  ngOnInit(){\n    this.spinner.show();\n    this.bankService.listBank().pipe(first()).subscribe((res: any) => {\n      console.log(res);\n      if(res.success == 1){\n      \tthis.banksList = res.data;\n      }\n      this.spinner.hide();\n    },\n    error=>{\n       console.log(error); \n    });\n  }\n\n  deleteBank(walletAddress){\n    var result = confirm(\"Are you sure, want to delete bank?\");\n    if(result){\n      this.bankService.deleteBank(walletAddress).pipe(first()).subscribe((res: any) => {\n        if(res.success == 1){\n          this.ngOnInit();\n        }\n      },\n      error =>{\n        alert(\"Something went wrong, please try again after few minutes\");\n      });\n    }\n  }\n\n\n  upvoteBank(walletAddress, bankSessionWalletAddress){\n     this.ethereumService.upvotebank(walletAddress, bankSessionWalletAddress).then((result) => {\n        alert(\"You have successfully voted for this bank\");\n        this.ngOnInit();\n     }).catch((error) => {\n        console.log(\"error\", error);\n     });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Banks List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Banks Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"banksList?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Name</th>\n                <th>Registered Number</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr *ngFor=\"let bank of banksList; let num= index;\">\n                <td>{{ (num+1) }}</td>\n                <td>{{ bank.name }}</td>\n                <td>{{ bank.rg_number }}</td>\n                <td>\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/banks/view', bank.wallet_address ]);\" title=\"View bank\">\n                    <i class=\"fas fa-fw fa-eye\"></i>\n                  </a> &nbsp;\n                \t<a *ngIf=\"currentUser.role_id == 1\" href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBank(bank.wallet_address);\" title=\"Remove bank\">\n                    <i class=\"fas fa-fw fa-trash\"></i>\n                  </a> &nbsp;\n                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"tex-primary\" (click)=\"upvoteBank(bank.wallet_address, currentUser.bank.wallet_address)\" title=\"Rating bank\">\n                    <i class=\"fas fa-fw fa-chevron-circle-up\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!banksList?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, BankRequest } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-request',\n  templateUrl: './list-request.component.html',\n  styleUrls: ['./list-request.component.css']\n})\nexport class ListRequestComponent implements OnInit {\n  currentUser: User;\n  bankRequestLists: Array<BankRequest>;\n  wallet_address;\n\n  constructor(\n    private spinner: NgxSpinnerService,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  ) {\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n    if(this.currentUser.role_id == 2){\n      this.wallet_address = this.currentUser.bank.wallet_address;\n    } else{\n      this.wallet_address = null;\n    }\n  }\n\n  approveBankRequest(username, data, wallet_address){\n    this.ethereumService.addCustomer(username, data, wallet_address).then((result)=>{\n      alert(\"Approved successfully\");\n      this.ngOnInit();\n    }).catch((error) =>{\n      console.log(\"approval error\", error);\n      alert(\"Something went wrong please try again!\");\n    });\n  }\n\n  deleteBankRequest(username, data, wallet_address){\n  \tvar con = confirm(\"Are you sure, want to delete bank kyc request?\");\n  \tif(con){\n  \t\tthis.ethereumService.removeRequest(username, data, wallet_address).then((result)=>{\n        alert(\"Removed successfully\");\n        this.ngOnInit();\n\t  \t}).catch((error) =>{\n\t  \t  console.log(\"removal error\", error);\n\t      alert(\"Something went wrong please try again!\");\n\t  \t});\n  \t}\n  }\n\n  ngOnInit(){\n    this.spinner.show();\n    this.bankRequestLists = [];\n    this.spinner.hide();\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Bank Requests List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Bank Requests Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"bankRequestLists?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>Username</th>\n                <th>Adhar Number</th>\n                <th>Request Index</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr *ngFor=\"let bankRequest of bankRequestLists;\">\n                <td>{{ bankRequest.username }}</td>\n                <td>{{ bankRequest.user_data }}</td>\n                <td>{{ bankRequest.request_index }}</td>\n                <td>\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/banks/requests/view', bankRequest.wallet_address, bankRequest.request_index ]);\" title=\"View\">\n                    <i class=\"fas fa-fw fa-eye\"></i>\n                  </a>\n                \t<a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"text-warning\" (click)=\"approveBankRequest(bankRequest.username, bankRequest.user_data, bankRequest.wallet_address);\" title=\"Approve\">\n                    <i class=\"fas fa-fw fa-eye\"></i>\n                  </a>\n                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"text-danger\"  (click)=\"deleteBankRequest(bankRequest.username, bankRequest.user_data, bankRequest.wallet_address);\"  title=\"Remove\">\n                    <i class=\"fas fa-fw fa-trash\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!bankRequestLists?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Customer } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-password-customer',\n  templateUrl: './password-customer.component.html',\n  styleUrls: ['./password-customer.component.css']\n})\nexport class PasswordCustomerComponent implements OnInit {\n  passCustomerForm: FormGroup;\n  currentUser: User;\n  customerData: Customer;\n\n  constructor(\n  \tprivate fb: FormBuilder,\n    private route: ActivatedRoute,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) {\n  \tthis.customerForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n\n  \tif(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n  customerForm(){\n  \tthis.passCustomerForm = this.fb.group({\n        name: ['', Validators.required],\n        password: ['', Validators.required],\n    });\n  }\n\n\n\n  setPassword(username, password){\n    this.ethereumService.setCustPassword(username, password, this.currentUser.bank.wallet_address).then((result)=>{\n      alert(\"You have changed password successfully\");\n      this.ngOnInit();\n    }).catch((error)=>{\n      alert(\"Something went wrong please try again in few minutes!\");\n    });\n\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => {\n  \t\tthis.ethereumService.viewCustomer(params['id'], params['username'], this.currentUser.bank.wallet_address)\n      .then((res)=>{\n        this.customerData = res.data;\n      \tthis.passCustomerForm.setValue({\n      \t\tname: res.data.username,\n      \t\tpassword: res.data.password\n      \t});\n  \t\t}).catch(error=>{\n        console.log(\"eroor\", error);\n  \t\t});\n  \t});\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Change customer password</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"passCustomerForm\" novalidate *ngIf=\"customerData\">\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name readonly>\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"passCustomerForm.controls['name'].invalid && (passCustomerForm.controls['name'].dirty || passCustomerForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"passCustomerForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"password\" class=\"form-control\" placeholder=\"Password\" autofocus=\"autofocus\" formControlName=\"password\" #password>\n\t                    <label for=\"password\">Password</label>\n\t                </div>\n\t                <p *ngIf=\"passCustomerForm.controls['password'].invalid && (passCustomerForm.controls['password'].dirty || passCustomerForm.controls['password'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"passCustomerForm.controls['password'].errors.required\">  \n\t                    Password is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"setPassword(name.value, password.value)\"  [disabled]=\"passCustomerForm.invalid\">Save</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/_services';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  get isBank() {\n    return this.currentUser && this.currentUser.role_id == 2;\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sidebar -->\n<ul class=\"sidebar navbar-nav\">\n\n  <li class=\"nav-item active\">\n   <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">\n     <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n     <span> Dashboard</span>\n   </a>\n  </li>\n\n  <li class=\"nav-item dropdown\"  >\n   <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n     <i class=\"fas fa-fw fa-landmark\"></i>\n     <span> Banks</span>\n   </a>\n   <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n     <a class=\"dropdown-item\" routerLink=\"/banks\">List</a>\n     <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/banks/add\">Add</a>\n   </div>\n  </li>\n\n  <li *ngIf=\"!isAdmin\" class=\"nav-item dropdown\">\n   <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n     <i class=\"fas fa-fw fa-check-circle\"></i>\n     <span> KYC Requests</span>\n   </a>\n   <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n     <a class=\"dropdown-item\" routerLink=\"/banks/requests\">List</a>\n     <a class=\"dropdown-item\" *ngIf=\"isBank\" routerLink=\"/banks/requests/add\">Add</a>\n   </div>\n  </li>\n\n  <li *ngIf=\"!isAdmin\" class=\"nav-item dropdown\">\n   <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n     <i class=\"fas fa-fw fa-users\"></i>\n     <span> Customers </span>\n   </a>\n   <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n     <a class=\"dropdown-item\" *ngIf=\"isBank\" routerLink=\"/customers/view\">View</a>\n   </div>\n  </li>\n\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-bank',\n  templateUrl: './view-bank.component.html',\n  styleUrls: ['./view-bank.component.css']\n})\nexport class ViewBankComponent implements OnInit {\n  currentUser: User;\n  bankData: Bank;\n\n  constructor(\n  \tprivate bankService: BankService,\n  \tprivate route: ActivatedRoute,\n    public router: Router,\n    private authenticationService: AuthenticationService,\n    private ethereumService: EthereumService\n  \t) {\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => {\n        this.ethereumService.getBank(params['walletAddress']).then((result) => {\n           result[0] = this.ethereumService.web3.utils.hexToString(result[0]);\n           result[4] = this.ethereumService.web3.utils.hexToString(result[4]);\n           this.bankData = result;\n        }).catch((error) => {\n           console.log(error);\n        });\n  \t});\n  }\n\n  deleteBank(walletAddress){\n    var result = confirm(\"Are you sure, want to delete bank?\");\n    if(result){\n      this.bankService.deleteBank(walletAddress).pipe(first()).subscribe((res: any) => {\n        if(res.success == 1){\n          this.ngOnInit();\n        }\n      },\n      error =>{\n        alert(\"Something went wrong, please try again after few minutes\");\n      });\n    }\n  }\n\n\n  upvoteBank(walletAddress, bankSessionWalletAddress){\n     this.ethereumService.upvotebank(walletAddress, bankSessionWalletAddress).then((result) => {\n        alert(\"You have successfully voted for this bank\");\n        this.ngOnInit();\n     }).catch((error) => {\n        console.log(\"error\", error);\n     });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t    <ol class=\"breadcrumb\">\n\t       <li class=\"breadcrumb-item\">\n\t         <a href=\"/\">Dashboard</a>\n\t       </li>\n\t       <li class=\"breadcrumb-item\"><a href=\"/banks\">Banks List</a></li>\n\t       <li class=\"breadcrumb-item active\">Bank View</li>\n\t    </ol>\n\t    <!-- DataTables Example -->\n\t    <div class=\"row\">\n        <div class=\"col-sm-8 offset-md-2\">\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<div class=\"card-header\">\n\t\t\t\t\t\t\t<i class=\"fas fa-table\"></i>\n\t\t\t\t\t\t\tBank Data\n\t\t\t\t\t\t</div>\n            <div class=\"card-body table-responsive\" *ngIf=\"bankData\">\n\t\t\t\t\t\t\t<table class=\"table table-bordered\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Bank Name</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[0] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Registration Number</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[4] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Wallet address</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[1] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Rating</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{{  bankData[2] }} &nbsp;\n\t                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"tex-primary\" (click)=\"upvoteBank(bankData[1], currentUser.bank.wallet_address)\" title=\"Rating bank\">\n\t                    <i class=\"fas fa-fw fa-chevron-circle-up\"></i>\n\t                  </a>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>KYC Count</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[3] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr *ngIf=\"currentUser.role_id == 1\">\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBank(bankData[1]);\" title=\"Remove bank\">\n                    \t<i class=\"fas fa-fw fa-trash\"></i>\n                  \t</a>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n            </div>\n\t\t\t    </div>\n\t\t\t\t\t<br>\n\t\t\t\t</div>\n\t    </div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, BankRequest } from '@app/_models';\n\n@Component({\n  selector: 'app-view-request',\n  templateUrl: './view-request.component.html',\n  styleUrls: ['./view-request.component.css']\n})\nexport class ViewRequestComponent implements OnInit {\n  currentUser: User;\n  requestData: BankRequest;\n  \n  constructor(\n    private bankService: BankService,\n  \tprivate route: ActivatedRoute, \n    public router: Router, \n    private authenticationService: AuthenticationService,\n    private ethereumService: EthereumService\n  ) { \n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n    this.route.params.subscribe(params => { \n    \tthis.ethereumService.getBankRequest(params['walletAddress'], params['index']).then((result) => {\n          console.log(\"Result\", result);\n          result[0] = this.ethereumService.web3.utils.hexToString(result[0]);\n          result[1] = this.ethereumService.web3.utils.hexToString(result[1]);\n          this.requestData = result;\n\n    \t}).catch((error) => {\n           console.log(\"Error\", error);\n    \t});\n    });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t\t    <ol class=\"breadcrumb\">\n\t\t       <li class=\"breadcrumb-item\">\n\t\t         <a href=\"/\">Dashboard</a>\n\t\t       </li>\n\t\t       <li class=\"breadcrumb-item active\">Bank Request KYC Details</li>\n\t\t    </ol>\n\t\t    <!-- DataTables Example -->\n\t\t    <div class=\"row\">\n                <div class=\"col-sm-6\">\n\t\t\t\t    <div class=\"card text-white bg-success\">\n\t\t\t\t    \t<div class=\"card-header\">\n\t\t                  <i class=\"fas fa-table\"></i>\n\t\t                   Banks Data\n\t\t                </div>\n\t\t                <div class=\"card-body\" *ngIf=\"requestData\">\n\t\t                \t<h5 class=\"card-title\">Username</h5>\n\t\t                \t<p class=\"card-text\">{{  requestData[0] }}</p>\n\t\t                \t<h5 class=\"card-title\">Adhar Number</h5>\n\t\t                \t<p class=\"card-text\">{{  requestData[1] }}</p>\n\t\t                \t<h5 class=\"card-title\">Wallet Address(Bank)</h5>\n\t\t                \t<p class=\"card-text\">{{  requestData[2] }}</p>\n\t\t                \t<h5 class=\"card-title\"> Can register as customer?</h5>\n\t\t                \t<p class=\"card-text\">{{  (requestData[3]) ? 'Yes': 'No' }}</p>\n\t\t                </div>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t    </div>\n\t\t</div>\n\t</div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl2: 'http://kyc.local',\n  apiUrl: 'http://localhost:3002',\n  RPCProvider: 'http://127.0.0.1:7545',\n  ContractAddress : '0x06Aa76a46443244D4092181BC18545bBaF5a8e11',\n  WalletAddress : '0xc9eCB58B4c96DE1fC48d41B4ef3D4421F6d52aF5'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}