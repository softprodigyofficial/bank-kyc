{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///(webpack)/buildin/global.js","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/role_auth.guard.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/bank.service.ts","webpack:///src/app/_services/customer.service.ts","webpack:///src/app/_services/ethereum.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/add-bank/add-bank.component.ts","webpack:///src/app/add-bank/add-bank.component.html","webpack:///src/app/add-customer/add-customer.component.html","webpack:///src/app/add-customer/add-customer.component.ts","webpack:///src/app/add-request/add-request.component.html","webpack:///src/app/add-request/add-request.component.ts","webpack:///src/app/admin-login/admin-login.component.html","webpack:///src/app/admin-login/admin-login.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-customer/edit-customer.component.ts","webpack:///src/app/edit-customer/edit-customer.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/list-bank/list-bank.component.ts","webpack:///src/app/list-bank/list-bank.component.html","webpack:///src/app/list-customer/list-customer.component.html","webpack:///src/app/list-customer/list-customer.component.ts","webpack:///src/app/list-request/list-request.component.ts","webpack:///src/app/list-request/list-request.component.html","webpack:///src/app/password-customer/password-customer.component.ts","webpack:///src/app/password-customer/password-customer.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/view-bank/view-bank.component.ts","webpack:///src/app/view-bank/view-bank.component.html","webpack:///src/app/view-customer/view-customer.component.ts","webpack:///src/app/view-customer/view-customer.component.html","webpack:///src/app/view-request/view-request.component.ts","webpack:///src/app/view-request/view-request.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///buffer (ignored)","webpack:///util (ignored)","webpack:///util (ignored)?e312","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","g","Function","window","AuthGuard","authenticationService","router","next","state","isLoggedIn","navigate","providedIn","AuthInterceptor","accessToken","getAccessToken","clone","setHeaders","Authorization","Pragma","handle","ErrorInterceptor","request","pipe","err","indexOf","status","logout","location","reload","error","message","statusText","RoleAuthGuard","currentUserValue","role_id","AuthenticationService","http","endpoint","apiUrl","headers","set","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","email","password","api_url","data","post","res","setItem","user","stringify","authToken","removeItem","value","BankService","name","wallet_address","rgNumber","rn","get","isallowed","params","console","log","username","user_data","CustomerService","rating","append","put","kyc","Web3","EthereumService","ready","accountsObservable","refreshAccounts","web3","eth","getAccounts","accs","warn","length","accounts","kycWeb3","ethereum","enable","currentProvider","providers","HttpProvider","prototype","sendAsync","send","RPCProvider","enableAccounts","contract","Contract","ContractAddress","methods","getBank","call","getBankRating","bank_session_wallet_address","getTransactionCount","nonce","upvoteBank","from","addRequest","utils","asciiToHex","index","getBankRequest","getBankRequestsNum","removeRequest","addCustomer","upvoteCust","viewCustomer","getCustRating","modifyCustomer","removeCustomer","setCustPassword","accessHistory","UserService","AddBankComponent","fb","bankService","bankForm","bankAddForm","group","required","walletAddress","addBank","subscribe","success","alert","selector","templateUrl","styleUrls","AddCustomerComponent","customerService","ethereumService","customerForm","addCustomerForm","adharAddress","bank","result","deleteBankRequest","res1","AddRequestComponent","bankRequestForm","adhareAddress","addBankRequest","AdminLoginComponent","login","undefined","walletLogin","getCoinbase","coinbase","personal","sign","signature","loginForm","adminLoginForm","inputEmail","inputPassword","adminLogin","body","document","getElementsByTagName","classList","add","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","x","AppModule","provide","useClass","multi","declarations","bootstrap","EditCustomerComponent","route","editCustomerForm","customerData","editCustomer","response","setValue","FooterComponent","HeaderComponent","bankCount","HomeComponent","userService","loading","remove","getById","userFromApi","ListBankComponent","spinner","show","listBank","banksList","hide","confirm","deleteBank","ngOnInit","bankSessionWalletAddress","upvotebank","ListCustomerComponent","voteCustomer","del","deleteCustomer","customerAccessHistory","listCustomer","customersList","ListRequestComponent","con","listBankRequest","bankRequestLists","PasswordCustomerComponent","passCustomerForm","setPassword","SidebarComponent","ViewBankComponent","hexToString","bankData","ViewCustomerComponent","ViewRequestComponent","requestData","environment","production","WalletAddress","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \nUrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(\n    public authenticationService : AuthenticationService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.isLoggedIn() !== true) {\n      this.router.navigate(['login']);\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService : AuthenticationService ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const accessToken = this.authenticationService.getAccessToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: `JWT $[accessToken}`,\n                'Cache-Control': 'no-cache',\n                Pragma: 'no-cache' \n            }\n        });\n        return next.handle(req);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.interceptor';\nexport * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './role_auth.guard';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \nUrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleAuthGuard implements CanActivate {\n  \n  constructor(\n    public authenticationService : AuthenticationService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.currentUserValue.role_id !== 1) {\n      this.router.navigate(['home']);\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\nimport { User } from '@app/_models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  endpoint: string = `${environment.apiUrl}`;\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  \n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  \n  constructor(private http: HttpClient, public router: Router) { \n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  adminLogin(email, password){\n  \tlet api_url = `${this.endpoint}/v1/admin/login`;\n  \tconst data = {\n        email, password\n  \t};\n  \t\n    return this.http.post<any>(api_url, data).pipe(map((res: any) => {\n        if(res.data){\n          localStorage.setItem('access_token', res.data.user.id);\n          localStorage.setItem('currentUser', JSON.stringify(res.data.user));\n          this.currentUserSubject.next(res.data.user);\n        }\n        return res.data;\n    }));\n\n  }\n\n\n  getAccessToken(){\n  \treturn localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null && localStorage.removeItem('currentUser') == null) {\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Bank, User, BankRequest } from '@app/_models';\n\n@Injectable({ \n\tprovidedIn: 'root' \n})\n\nexport class BankService{\n\theaders = new HttpHeaders().set('Content-Type', 'application/json');\n\tconstructor(private http: HttpClient) { }\n\n\taddBank(name: string, wallet_address: string, rgNumber: string, email: string, password: string): Observable<Bank>{\n        return this.http.post<Bank>(`${environment.apiUrl}/v1/bank/add`, {name: name, wallet_address: wallet_address, rn: rgNumber, email: email, password: password });\n\t}\n\n\tlistBank():Observable<Bank>{\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/list`);\n\t}\n\n\tviewBank(wallet_address: string): Observable<Bank>{\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/show/${wallet_address}`);\n\t}\n\n\tdeleteBank(wallet_address: string): Observable<Bank>{\n\t   return this.http.post<Bank>(`${environment.apiUrl}/v1/bank/delete`,{wallet_address: wallet_address});\t\n\t}\n\n\taddBankRequest(name: string, data: string, wallet_address: string, isallowed: boolean): Observable<BankRequest>{\n\t   return this.http.post<BankRequest>(`${environment.apiUrl}/v1/bank/request/add`, {name: name, data: data, wallet_address: wallet_address, isallowed: isallowed});\n\t}\n\n\tlistBankRequest(wallet_address: string): Observable<BankRequest>{\n\t  let params = new HttpParams().set('wallet_address', wallet_address);\n\t  console.log(\"parameters\", params);\n\t  return this.http.get<BankRequest>(`${environment.apiUrl}/v1/bank/request/list`, {params: params });\n\t}\n\n\tdeleteBankRequest(username: string, data: string, wallet_address: string): Observable<BankRequest>{\n\t  return this.http.post<BankRequest>(`${environment.apiUrl}/v1/bank/request/remove`,{username: username, user_data: data, wallet_address: wallet_address});\n\t}\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { User, Customer } from '@app/_models';\n\n@Injectable({ \n\tprovidedIn: 'root' \n})\n\n\nexport class CustomerService{\n   headers = new HttpHeaders().set('Content-Type', 'application/json');\n   constructor(private http: HttpClient) { }\n\n    addCustomer(username: string, data: string, wallet_address: string): Observable<Customer>{\n   \t  return this.http.post<Customer>(`${environment.apiUrl}/v1/customer/add`,{username: username, data: data, wallet_address: wallet_address}); \n    }\n\n    listCustomer(wallet_address: string): Observable<Customer>{\n    \tlet params = new HttpParams().set('wallet_address', wallet_address);\n\t\treturn this.http.get<Customer>(`${environment.apiUrl}/v1/customer/list`, {params: params });\n\t}\n\n\tvoteCustomer(username: string, rating: number, wallet_address: string): Observable<Customer>{\n       return this.http.post<Customer>(`${environment.apiUrl}/v1/customer/vote`, {username: username, rating: rating, wallet_address: wallet_address});\n\t}\n\n\tviewCustomer(id: string, username: string): Observable<Customer>{\n\t\tlet params = new HttpParams();\n        params = params.append('id', id);\n        params = params.append('username', username);\n        return this.http.get<Customer>(`${environment.apiUrl}/v1/customer/view`,{params: params });\n\t}\n\n\teditCustomer(username: string, data: string, wallet_address: string): Observable<Customer>{\n\t\treturn this.http.put<Customer>(`${environment.apiUrl}/v1/customer/edit`,{username: username, data: data, wallet_address: wallet_address});\n\t}\n\n\tdeleteCustomer(username: string, wallet_address: string): Observable<Customer>{\n\t\treturn this.http.post<Customer>(`${environment.apiUrl}/v1/customer/delete`, {username: username, wallet_address: wallet_address});\n\t}\n\n\tsetPassword(username: string, password: string, wallet_address: string): Observable<Customer>{\n      return this.http.put<Customer>(`${environment.apiUrl}/v1/customer/set_password`, {username: username, password: password, wallet_address: wallet_address});\n\t}\n}","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { environment } from '@environments/environment';\n\ndeclare let require: any;\ndeclare let window: any;\ndeclare let ethereum: any;\n\nlet kyc = require('./kyc.json');\nconst Web3 = require('web3');\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EthereumService {\n  public web3: any;\n  private contract: any;\n  private accounts: string[];\n  public ready = false;\n\n  public accountsObservable = new Subject<string[]>();\n\n    constructor() { this.kycWeb3(); }\n\n    private async enableAccounts() {\n\t    if (window.ethereum) {\n\t      window.web3 = new Web3(ethereum);\n\t      try {\n\t        // Request account access if needed\n\t        await ethereum.enable();\n\t      } catch (error) {\n\t        // User denied account access...\n\t      }\n\t    }\n    }\n\n    public kycWeb3(){\n      if (typeof window.web3 !== 'undefined') {\n         this.web3 = new Web3(new Web3(window.web3.currentProvider));\n      } else {\n          Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n          this.web3 = new Web3(new Web3.providers.HttpProvider(environment.RPCProvider));\n          //console.log(this.web3);\n      }\n\n      console.log(\"this web3\", this.web3);\n      this.enableAccounts().then(() => {\n        this.refreshAccounts();\n      });\n\n      this.contract = new this.web3.eth.Contract(kyc, environment.ContractAddress);\n\n\t   }\n\n    public getProvider() {\n       return this.web3.currentProvider;\n    }\n\n    public getAccount() {\n      if (!this.accounts) {\n        console.log('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n        return null;\n      }\n      return this.accounts[0];\n    }\n\n    public refreshAccounts = () => {\n       if (typeof window.web3 !== 'undefined') {\n\t      this.web3.eth.getAccounts((err, accs) => {\n\t        if (err != null) {\n\t          console.warn('There was an error fetching your accounts.');\n\t          return;\n\t        }\n\n\t        // Get the initial account balance so it can be displayed.\n\t        if (accs.length === 0) {\n\t          console.warn('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n\t          return;\n\t        }\n\n\t        if (!this.accounts || this.accounts.length !== accs.length || this.accounts[0] !== accs[0]) {\n\t          console.log('Observed new accounts');\n\n\t          this.accountsObservable.next(accs);\n\t          this.accounts = accs;\n\t          console.log(\"ffffff\",this.accounts);\n\t        }\n\n\t        this.ready = true;\n\t      });\n        }\n    };\n\n    public getBank(wallet_address: string): Promise<any>{\n   \t   return this.contract.methods.getBank(wallet_address).call();\n    }\n\n    public getBankRating(wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getBankRating(wallet_address).call();\n    }\n\n    public async upvotebank(wallet_address: string, bank_session_wallet_address: string): Promise<any>{\n       let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n       return this.contract.methods.upvoteBank(wallet_address).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async addRequest(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.addRequest(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce: nonce, from: bank_session_wallet_address});\n    }\n\n    public getBankRequest(wallet_address: string, index: number): Promise<any>{\n    \t  //console.log(this.web3.eth.getAccounts());\n    \t  console.log(\"ddatta\", wallet_address, index);\n    \treturn this.contract.methods.getBankRequest(wallet_address, index).call({from: wallet_address});\n    }\n\n    public getBankRequestsNum(wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getBankRequestsNum(wallet_address).call({from: wallet_address});\n    }\n\n    public async removeRequest(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.removeRequest(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async addCustomer(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.addCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async upvoteCust(username: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.upvoteCust(Web3.utils.asciiToHex(username)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public viewCustomer(username: string, password: string, bank_session_wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.viewCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password)).call({from: bank_session_wallet_address});\n    }\n\n    public getCustRating(username: string, bank_session_wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getCustRating(Web3.utils.asciiToHex(username)).call({from: bank_session_wallet_address});\n    }\n\n    public async modifyCustomer(username: string, password: string, data: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.modifyCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async removeCustomer(username: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.removeCustomer(Web3.utils.asciiToHex(username)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async setCustPassword(username: string, password: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.setCustPassword(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public customerAccessHistory(username: string, bank_session_wallet_address:string): Promise<any>{\n      return this.contract.methods.accessHistory(Web3.utils.asciiToHex(username)).call({from: bank_session_wallet_address});\n    }\n\n}\n","export * from './authentication.service';\nexport * from './user.service';\nexport * from './bank.service';\nexport * from './ethereum.service';\nexport * from './customer.service';\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ \n\tprovidedIn: 'root' \n})\n\nexport class UserService{\n\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n\tconstructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`${environment.apiUrl}/v1/users`);\n    }\n\n    getById(id: number) {\n        //var d = new Date();\n        return this.http.get<User>(`${environment.apiUrl}/v1/user/${id}`);\n    }\n\n    addWalletAddress(wallet_address: string, id: number): Observable<User>{\n       return this.http.put<User>(`${environment.apiUrl}/v1/user/wallet-address`, {id: id, wallet_address: wallet_address });\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-bank',\n  templateUrl: './add-bank.component.html',\n  styleUrls: ['./add-bank.component.css']\n})\nexport class AddBankComponent implements OnInit {\n  bankAddForm: FormGroup;\t\n  currentUser: User;\n\n    constructor(\n  \tprivate fb: FormBuilder, \n  \tprivate bankService: BankService, \n  \tpublic router: Router, \n  \tprivate authenticationService: AuthenticationService) { \n  \t   this.bankForm();\n  \t   this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    bankForm(){\n        this.bankAddForm = this.fb.group({\n          name: ['', Validators.required],\t\n          walletAddress: ['', Validators.required],\n          rgNumber: ['', Validators.required],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', Validators.required]\n        });\n    }\n\n    addBank(name, wallet_address, rgNumber, email, password){\n      console.log(\"name\", name, wallet_address,rgNumber,email,password);\n       this.bankService.addBank(name, wallet_address, rgNumber, email, password).pipe(first()).subscribe((res:any)=>{\n        if(res.success ==  1){\n            alert(\"Bank added successfully\");\n            this.router.navigate(['banks']);\n        }\n       },\n      error =>{\n          console.log(error);\n          alert(\"This bank already exist\");\n      });\n    }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Add Bank</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankAddForm\" novalidate>\n           \t     <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Bank Name</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['name'].invalid && (bankAddForm.controls['name'].dirty || bankAddForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['name'].errors.required\">  \n\t                    Bank name is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"walletAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"walletAddress\" #walletAddress>\n\t                    <label for=\"walletAddress\">Wallet Address</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['walletAddress'].invalid && (bankAddForm.controls['walletAddress'].dirty || bankAddForm.controls['walletAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['walletAddress'].errors.required\">  \n\t                    Wallet address is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"rgNumber\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"rgNumber\" #rgNumber>\n\t                    <label for=\"rgNumber\">Register Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['rgNumber'].invalid && (bankAddForm.controls['rgNumber'].dirty || bankAddForm.controls['rgNumber'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['rgNumber'].errors.required\">  \n\t                    Register number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"email\" #email>\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['email'].invalid && (bankAddForm.controls['email'].dirty || bankAddForm.controls['email'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['email'].errors.required\">  \n                      Email is required.  \n                    </span> \n                    <span *ngIf=\"bankAddForm.controls['email'].errors.email\">Enter a valid email address</span> \n                  </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"password\" #password>\n                    <label for=\"password\">Password</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['password'].invalid && (bankAddForm.controls['password'].dirty || bankAddForm.controls['password'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['password'].errors.required\">  \n                      Password is required.  \n                    </span> \n                  </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBank(name.value, walletAddress.value, rgNumber.value, email.value, password.value)\"  [disabled]=\"bankAddForm.pristine || bankAddForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Add customer</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"addCustomerForm\" novalidate>\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"addCustomerForm.controls['name'].invalid && (addCustomerForm.controls['name'].dirty || addCustomerForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"addCustomerForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"adharAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"adharAddress\" #adharAddress>\n\t                    <label for=\"adharAddress\">Adhar Number</label>\n\t                </div>\n\t                <p *ngIf=\"addCustomerForm.controls['adharAddress'].invalid && (addCustomerForm.controls['adharAddress'].dirty || addCustomerForm.controls['adharAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"addCustomerForm.controls['adharAddress'].errors.required\">  \n\t                    Adhar number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addCustomer(name.value, adharAddress.value)\"  [disabled]=\"addCustomerForm.pristine || addCustomerForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AuthenticationService, EthereumService, CustomerService, BankService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Customer, BankRequest } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n  addCustomerForm: FormGroup;\n  currentUser: User;\n\n  constructor(\n  \tprivate fb: FormBuilder, \n  \tpublic router: Router, \n    private bankService: BankService, \n  \tprivate customerService: CustomerService,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  ) { \n  \tthis.customerForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n\n  \tif(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n\n  customerForm(){\n  \tthis.addCustomerForm = this.fb.group({\n        name: ['', Validators.required],\t\n        adharAddress: ['', Validators.required],\n    });\n  }\n\n  async addCustomer(username, adharAddress){\n  \tlet rating = await this.ethereumService.getBankRating(this.currentUser.bank.wallet_address);\n  \tif(rating > 50){\n        this.ethereumService.addCustomer(username, adharAddress, this.currentUser.bank.wallet_address)\n        .then((result)=> {\n           console.log(\"Add customer result\", result);\n           this.customerService.addCustomer(username, adharAddress, this.currentUser.bank.wallet_address)\n           .pipe(first()).subscribe((res:any) => {\n                console.log(res);\n              this.bankService.deleteBankRequest(username, adharAddress, this.currentUser.bank.wallet_address)\n              .pipe(first()).subscribe((res1:any)=>{\n                alert(\"You have added customer successfully.\");\n                this.router.navigate(['customers']);\n              },\n              error=>{\n                alert(\"Something went wrong please try again!\"); \n              });\n               \n\t\t      },error=>{\n\t\t        console.log(\"bnak request\", error);\n\t\t        alert(\"Something went wrong please try again!\");\n\t\t      });\n   \n        }).catch((error) => {\n           console.log(\"Add customer error\", error);\n        });\n  \t} else{\n      alert(\"You can not add customer because of insufficient rating, please contact other banks to upgrade your rating\");\n  \t}\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Request KYC</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankRequestForm\" novalidate>\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"bankRequestForm.controls['name'].invalid && (bankRequestForm.controls['name'].dirty || bankRequestForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankRequestForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"adharAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"adharAddress\" #adharAddress>\n\t                    <label for=\"adharAddress\">Adhar Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankRequestForm.controls['adharAddress'].invalid && (bankRequestForm.controls['adharAddress'].dirty || bankRequestForm.controls['adharAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankRequestForm.controls['adharAddress'].errors.required\">  \n\t                    Adhar number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBankRequest(name.value, adharAddress.value)\"  [disabled]=\"bankRequestForm.pristine || bankRequestForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-request',\n  templateUrl: './add-request.component.html',\n  styleUrls: ['./add-request.component.css']\n})\nexport class AddRequestComponent implements OnInit {\n  bankRequestForm: FormGroup;\t\n  currentUser: User;\n\n  constructor(\n  \tprivate fb: FormBuilder, \n  \tprivate bankService: BankService, \n  \tpublic router: Router, \n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) { \n  \tthis.bankForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n    \n    console.log(this.currentUser.role_id);\n    if(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n  bankForm(){\n    this.bankRequestForm = this.fb.group({\n        name: ['', Validators.required],\t\n        adharAddress: ['', Validators.required],\n    });\n  }\n\n  addBankRequest(name, adhareAddress){\n    this.ethereumService.addRequest(name, adhareAddress, this.currentUser.bank.wallet_address).then(async(result)=>{\n      let rating = await this.ethereumService.getBankRating(this.currentUser.bank.wallet_address);\n      let isallowed = rating > 50;\n      this.bankService.addBankRequest(name, adhareAddress, this.currentUser.bank.wallet_address, isallowed)\n      .pipe(first()).subscribe((res:any) => {\n        console.log(res);\n        alert(\"Request KYC is done successfully.\");\n        this.router.navigate(['banks/requests']);\n      },error=>{\n        console.log(\"bnak request\", error);\n        //alert(\"This bank already exist\");\n      });\n       \n    }).catch((error) =>{\n      console.log(\"error\", error.message);\n      alert(\"You have already requested for KYC\");\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card card-login mx-auto mt-5\">\n    <div class=\"card-header\">Login</div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"adminLoginForm\" novalidate>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" autofocus=\"autofocus\" formControlName=\"inputEmail\" id=\"inputEmail\" #inputEmail>\n            <label for=\"inputEmail\">Email address</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputEmail'].invalid && (adminLoginForm.controls['inputEmail'].dirty || adminLoginForm.controls['inputEmail'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.required\">\n              Email is required.\n            </span>\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.email\">Enter a valid email address</span>\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"inputPassword\" id=\"inputPassword\" #inputPassword>\n            <label for=\"inputPassword\">Password</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputPassword'].invalid && (adminLoginForm.controls['inputPassword'].dirty || adminLoginForm.controls['inputPassword'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputPassword'].errors.required\">\n              Password is required.\n            </span>\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" value=\"remember-me\">\n              Remember Password\n            </label>\n          </div>\n        </div>\n        <button type=\"submit\"  (click)=\"adminLogin(inputEmail.value, inputPassword.value)\" class=\"btn btn-primary btn-block\"   [disabled]=\"adminLoginForm.pristine || adminLoginForm.invalid\" >Login</button>\n      </form>\n      <div class=\"text-center\">\n        <!-- <a class=\"d-block small mt-3\" href=\"javascript:void(0);\" (click)=\"walletLogin();\">login with metamask</a> -->\n        <a class=\"d-block small\" href=\"forgot-password.html\">Forgot Password?</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms'; \nimport { AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport Web3 from 'web3';\n\ndeclare let window: any;\n//declare let ethereum: any;\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  web3: Web3 |  undefined = undefined;\n  adminLoginForm: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder, \n    private login: AuthenticationService, \n    public router: Router\n    ) { \n    this.loginForm();\n    if(this.login.isLoggedIn() == true){\n       this.router.navigate(['home']);\n    }\n  }\n\n  loginForm(){\n    this.adminLoginForm = this.fb.group({\n      inputEmail: ['', [Validators.required, Validators.email]],\n      inputPassword: ['', Validators.required] \n    });\n  }\n\n  adminLogin(inputEmail, inputPassword){\n  \tthis.login.adminLogin(inputEmail, inputPassword)\n    .pipe(first())\n    .subscribe(data => {\n      this.router.navigate(['home']);\n    });\n  }\n\n  walletLogin = async () =>{\n    if (!window.ethereum){\n       alert(\"Please install MetaMask first.\");\n    }\n      \n    if (!this.web3) {\n      try {\n        // Request account access if needed\n        await (window).ethereum.enable();\n\n        // We don't know window.web3 version, so we use our own instance of Web3\n        // with the injected provider given by MetaMask\n        this.web3 = new Web3((window).ethereum);\n      } catch (error) {\n        window.alert('You need to allow MetaMask.');\n        return;\n      }\n    }\n\n\n    const coinbase = await this.web3.eth.getCoinbase();\n    console.log(\"adddress\", coinbase);\n    if (!coinbase) {\n      alert('Please activate MetaMask first.');\n      return;\n    }\n\n    let nonce = this.web3.eth.getTransactionCount(coinbase);\n    const signature = await this.web3.eth.personal.sign(`I am signing my one-time nonce: ${nonce}`,\n        coinbase,\n        '' // MetaMask will ignore the password argument here\n      );\n\n    console.log(\"signature\", signature);\n\n  }\n\n  ngOnInit(): void {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.add('bg-dark');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { AddRequestComponent } from './add-request/add-request.component';\nimport { ViewRequestComponent } from './view-request/view-request.component';\nimport { ListRequestComponent } from './list-request/list-request.component';\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\nimport { ListCustomerComponent } from './list-customer/list-customer.component';\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\nimport { PasswordCustomerComponent } from './password-customer/password-customer.component';\nimport { AuthGuard, RoleAuthGuard } from '@app/_helpers';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'login', component: AdminLoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'banks/add', component: AddBankComponent, canActivate: [AuthGuard, RoleAuthGuard] },\n  { path: 'banks', component: ListBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/view/:walletAddress', component: ViewBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests/add', component: AddRequestComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests', component: ListRequestComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests/view/:walletAddress/:index', component: ViewRequestComponent, canActivate: [AuthGuard] },\n  { path: 'customers/add', component: AddCustomerComponent, canActivate: [AuthGuard] },\n  { path: 'customers', component: ListCustomerComponent, canActivate: [AuthGuard] },\n  { path: 'customers/view/:username/:password', component: ViewCustomerComponent, canActivate: [AuthGuard] },\n  { path: 'customers/edit/:id/:username', component: EditCustomerComponent, canActivate: [AuthGuard] },\n  { path: 'customers/password/:id/:username', component: PasswordCustomerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'angular-app';\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  logout() {\n  \tthis.authenticationService.logout();\n  \tthis.router.navigate(['/login']);\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthInterceptor, ErrorInterceptor } from '@app/_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { AddRequestComponent } from './add-request/add-request.component';\nimport { ViewRequestComponent } from './view-request/view-request.component';\nimport { ListRequestComponent } from './list-request/list-request.component';\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\nimport { ListCustomerComponent } from './list-customer/list-customer.component';\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\nimport { EditCustomerComponent } from './edit-customer/edit-customer.component';\nimport { PasswordCustomerComponent } from './password-customer/password-customer.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    SidebarComponent,\n    FooterComponent,\n    AdminLoginComponent,\n    AddBankComponent,\n    ListBankComponent,\n    ViewBankComponent,\n    AddRequestComponent,\n    ViewRequestComponent,\n    ListRequestComponent,\n    AddCustomerComponent,\n    ListCustomerComponent,\n    ViewCustomerComponent,\n    EditCustomerComponent,\n    PasswordCustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AuthenticationService, EthereumService, CustomerService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Customer } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-edit-customer',\n  templateUrl: './edit-customer.component.html',\n  styleUrls: ['./edit-customer.component.css']\n})\nexport class EditCustomerComponent implements OnInit {\n  editCustomerForm: FormGroup;\n  currentUser: User;\n  customerData: Customer;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,  \n  \tpublic router: Router, \n  \tprivate customerService: CustomerService,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) { \n  \tthis.customerForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n\n  \tif(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n  customerForm(){\n  \tthis.editCustomerForm = this.fb.group({\n        name: ['', Validators.required],\t\n        adharAddress: ['', Validators.required],\n    });\n  }\n\n\n  editCustomer(username, data){\n    this.ethereumService.modifyCustomer(username, this.customerData.password, data, this.currentUser.bank.wallet_address).then((result)=>{\n       this.customerService.editCustomer(username, data, this.currentUser.bank.wallet_address).pipe(first()).subscribe((response: any)=>{\n          alert(\"You have modified customer data successfully\");\n          this.router.navigate(['customers']);\n       },error=>{\n          alert(\"Something went wrong to modify customer data\");\n       });\n    }).catch((error)=>{\n       console.log(\"edit error\", error);\n    });\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => {\n  \t\tthis.customerService.viewCustomer(params['id'], params['username']).pipe(first()).subscribe((res:any)=>{\n          if(res.success == 1){\n          \tthis.customerData = res.data;\n          \tthis.editCustomerForm.setValue({\n          \t\tname: res.data.username,\n          \t\tadharAddress: res.data.user_data\n          \t});\n          }else{\n          \tthis.customerData = null;\n          }\n  \t\t},error=>{\n          console.log(\"eroor\", error);\n  \t\t});\n  \t});\n\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Edit customer</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"editCustomerForm\" novalidate *ngIf=\"customerData\">\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name readonly>\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"editCustomerForm.controls['name'].invalid && (editCustomerForm.controls['name'].dirty || editCustomerForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"editCustomerForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"adharAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"adharAddress\" #adharAddress>\n\t                    <label for=\"adharAddress\">Adhar Number</label>\n\t                </div>\n\t                <p *ngIf=\"editCustomerForm.controls['adharAddress'].invalid && (editCustomerForm.controls['adharAddress'].dirty || editCustomerForm.controls['adharAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"editCustomerForm.controls['adharAddress'].errors.required\">  \n\t                    Adhar number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"editCustomer(name.value, adharAddress.value)\"  [disabled]=\"editCustomerForm.invalid\">Save</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sticky Footer -->\n<footer class=\"sticky-footer\">\n  <div class=\"container my-auto\">\n      <div class=\"copyright text-center my-auto\">\n        <span>Copyright © Your Website 2018</span>\n      </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: User;\n  bankCount = 0;\n\n  constructor(\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService \n  \t) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n  \n  ngOnInit(){\n    if(this.currentUser.role_id == 2){\n      this.ethereumService.getBankRequestsNum(this.currentUser.bank.wallet_address).then((result) => {\n        this.bankCount = result;\n      }).catch((error) => {\n          console.log(\"Error of getBankRequestsNum\", error);\n      }); \n    }\n  \t\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark static-top\">\n\n     <a class=\"navbar-brand mr-1\" href=\"index.html\">Start Bootstrap</a>\n\n     <button class=\"btn btn-link btn-sm text-white order-1 order-sm-0\" id=\"sidebarToggle\" href=\"#\">\n       <i class=\"fas fa-bars\"></i>\n     </button>\n\n     <!-- Navbar Search -->\n     <form class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n       <div class=\"input-group\">\n         <!--<input type=\"text\" class=\"form-control\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n         <div class=\"input-group-append\">\n           <button class=\"btn btn-primary\" type=\"button\">\n             <i class=\"fas fa-search\"></i>\n           </button>\n         </div>-->\n       </div>\n     </form>\n\n     <!-- Navbar -->\n     <ul class=\"navbar-nav ml-auto ml-md-0\">\n       <!--<li class=\"nav-item dropdown no-arrow mx-1\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          <span class=\"badge badge-danger\">{{ bankCount }}</span><i class=\"fas fa-bell fa-fw\"></i>\n          </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"alertsDropdown\">\n           <a class=\"dropdown-item\" routerLink=\"/banks/requests\">You have {{ bankCount }} bank {{ (bankCount > 1) ? 'requests' : 'request' }}</a>\n         </div>\n       </li>-->\n       \n       <li class=\"nav-item dropdown no-arrow\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-user-circle fa-fw\"></i>\n         </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\n           <a class=\"dropdown-item\" href=\"#\">Settings</a>\n           <a class=\"dropdown-item\" href=\"#\">Activity Log</a>\n           <div class=\"dropdown-divider\"></div>\n           <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n         </div>\n       </li>\n     </ul>\n\n   </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, AuthenticationService } from '@app/_services';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  currentUser: User;\n  userFromApi: User;\n  \n  constructor(private userService: UserService, private authenticationService: AuthenticationService) { \n    this.currentUser = this.authenticationService.currentUserValue;\n    console.log(this.currentUser);\n  }\n\n  ngOnInit(){\n\n  \tconst body = document.getElementsByTagName('body')[0];\n    body.classList.remove('bg-dark');\n\n    this.loading = true;\n    this.userService.getById(this.currentUser.id).pipe(first()).subscribe( (user: any) => {\n      this.loading = false;\n      this.userFromApi = user.data;\n    });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n\n         <!-- Breadcrumbs-->\n         <ol class=\"breadcrumb\">\n           <li class=\"breadcrumb-item\">\n             <a href=\"#\">Dashboard</a>\n           </li>\n           <li class=\"breadcrumb-item active\">Overview</li>\n         </ol>\n\n         <!-- Icon Cards-->\n         <!--<div class=\"row\">\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-primary o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-comments\"></i>\n                 </div>\n                 <div class=\"mr-5\">26 New Messages!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-warning o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-list\"></i>\n                 </div>\n                 <div class=\"mr-5\">11 New Tasks!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-success o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-shopping-cart\"></i>\n                 </div>\n                 <div class=\"mr-5\">123 New Orders!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-danger o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-life-ring\"></i>\n                 </div>\n                 <div class=\"mr-5\">13 New Tickets!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n         </div>-->\n\n         <div class=\"row\">\n            <div class=\"col-md-12 col-xl-12 col-sm-12\">\n              <div class=\"card mt-4\">\n                <h4 class=\"card-header\">Home</h4>\n                <div class=\"card-body\">\n                  <p>You're logged in with Angular 8 & JWT!!</p>\n                  <p>Your role is: <strong >{{ (currentUser.role_id == 1)? 'Admin' : 'Bank' }}</strong>.</p>\n                  <p>This page can be accessed by <u>all authenticated users</u>.</p>\n                  <p class=\"mb-1\">Current user from secure api end point:</p>\n                  <!--<div *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\"></div>-->\n                  <ul *ngIf=\"userFromApi\">\n                     <li>{{userFromApi.firstName}} {{userFromApi.lastName}}</li>\n                 </ul>\n                </div>\n              </div>\n            </div>\n         </div>\n         \n\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-bank',\n  templateUrl: './list-bank.component.html',\n  styleUrls: ['./list-bank.component.css']\n})\nexport class ListBankComponent implements OnInit {\n  currentUser: User;\n  banksList:Array<Bank>;\n  \n  constructor(\n  private spinner: NgxSpinnerService,\n  private bankService: BankService, \n  public router: Router, \n  private authenticationService: AuthenticationService,\n  private ethereumService: EthereumService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n    console.log(this.currentUser);\n  }\n\n  ngOnInit(){\n    this.spinner.show();\n    this.bankService.listBank().pipe(first()).subscribe((res: any) => {\n      console.log(res);\n      if(res.success == 1){\n      \tthis.banksList = res.data;\n      }\n      this.spinner.hide();\n    },\n    error=>{\n       console.log(error); \n    });\n  }\n\n  deleteBank(walletAddress){\n    var result = confirm(\"Are you sure, want to delete bank?\");\n    if(result){\n      this.bankService.deleteBank(walletAddress).pipe(first()).subscribe((res: any) => {\n        if(res.success == 1){\n          this.ngOnInit();\n        }\n      },\n      error =>{\n        alert(\"Something went wrong, please try again after few minutes\");\n      });\n    }\n  }\n\n\n  upvoteBank(walletAddress, bankSessionWalletAddress){\n     this.ethereumService.upvotebank(walletAddress, bankSessionWalletAddress).then((result) => {\n        alert(\"You have successfully voted for this bank\");\n        this.ngOnInit();\n     }).catch((error) => {\n        console.log(\"error\", error);\n     });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Banks List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Banks Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"banksList?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Name</th>\n                <th>Wallet Adderss</th>\n                <th>Registered Number</th>\n                <th>Transaction Id</th>\n                <th>Rating</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            \n            <tbody>\n              <tr *ngFor=\"let bank of banksList; let num= index;\">\n                <td>{{ (num+1) }}</td>\n                <td>{{ bank.name }}</td>\n                <td>{{ bank.wallet_address }}</td>\n                <td>{{ bank.rg_number }}</td>\n                <td>{{ bank.eth_transaction_id }}</td>\n                <td>{{ bank.rating }}</td>\n                <td>\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/banks/view', bank.wallet_address ]);\" title=\"View bank\"><i class=\"fas fa-fw fa-eye\"></i></a>\n                \t<a  *ngIf=\"currentUser.role_id == 1\" href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBank(bank.wallet_address);\" title=\"Remove bank\"><i class=\"fas fa-fw fa-trash\"></i></a>\n                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"tex-primary\" (click)=\"upvoteBank(bank.wallet_address, currentUser.bank.wallet_address)\" title=\"Rating bank\"><i class=\"fas fa-fw fa-star\"></i></a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!banksList?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n\n\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Customers List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Customers Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\"  *ngIf=\"customersList?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Username</th>\n                <th>Adhar Number</th>\n                <th>Password</th>\n                <th>Wallet Address(Bank)</th>\n                <th>Rating</th>\n                <th *ngIf=\"currentUser.role_id == 2\">Action</th>\n              </tr>\n            </thead>\n            \n            <tbody>\n              <tr *ngFor=\"let customer of customersList; let num= index;\">\n                <td>{{ (num+1) }}</td>\n                <td>{{ customer.username }}</td>\n                <td>{{ customer.user_data }}</td>\n                <td>{{ customer.password }}</td>\n                <td>{{ customer.wallet_address }}</td>\n                <td>{{ customer.rating }}</td>\n                <td *ngIf=\"currentUser.role_id == 2\">\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/customers/view', customer.username, customer.password ]);\" title=\"View customer\"><i class=\"fas fa-fw fa-eye\"></i></a>\n                \t<a href=\"javascript:void(0)\" class=\"text-warning\" (click)=\"upvoteCustomer(customer.username)\" title=\"Rating customer\"><i class=\"fas fa-fw fa-star\"></i></a>\n                \t<a href=\"javascript:void(0)\" class=\"text-primary\" (click)=\"router.navigate(['/customers/edit', customer.id, customer.username])\" title=\"Edit customer\"><i class=\"fas fa-fw fa-edit\"></i></a>\n                  <a href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteCustomer(customer.username)\" title=\"Remove customer\"><i class=\"fas fa-fw fa-trash\"></i></a>\n                  <a href=\"javascript:void(0)\" class=\"text-info\" (click)=\"router.navigate(['/customers/password', customer.id, customer.username])\" title=\"Set Password\"><i class=\"fas fa-fw fa-key\"></i></a>\n                  <a href=\"javascript:void(0)\" class=\"text-secondary\" (click)=\"accessHistory(customer.username)\" title=\"Access History\"><i class=\"fas fa-fw fa-history\"></i></a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!customersList?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Customer } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-customer',\n  templateUrl: './list-customer.component.html',\n  styleUrls: ['./list-customer.component.css']\n})\nexport class ListCustomerComponent implements OnInit {\n  currentUser: User;\n  customersList:Array<Customer>;\n  wallet_address;\n  \n  constructor(\n  private spinner: NgxSpinnerService,  \n  private customerService: CustomerService, \n  public router: Router, \n  private authenticationService: AuthenticationService,\n  private ethereumService: EthereumService\n  ) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n    if(this.currentUser.role_id == 1){\n      this.wallet_address = null;\n    }else{\n      this.wallet_address = this.currentUser.bank.wallet_address;\n    }\n  }\n\n  \n  upvoteCustomer(username){\n  \tthis.ethereumService.upvoteCust(username,this.wallet_address).then( async(result)=>{\n        let rating = await this.ethereumService.getCustRating(username, this.wallet_address);\n        this.customerService.voteCustomer(username, rating, this.wallet_address).pipe(first()).subscribe((res: any)=>{\n          if(res.success == 1){\n            alert(\"You have voted successfully\");\n          }else{\n          \tconsole.log(\"error update rating in db\");\n            alert(\"Something went wrong please try again in few minutes!\");\n          }\n          this.ngOnInit();\n        },\n        error=>{\n          console.log(error);\n        });\n        this.ngOnInit();\n  \t}).catch((error) => {\n        alert(\"Something went wrong please try again in few minutes!\");\n  \t});\n  }\n\n  deleteCustomer(username){\n    var del = confirm(\"Are you sure, want to remove this customer?\");\n    if(del){\n      this.ethereumService.removeCustomer(username, this.wallet_address).then((result)=>{\n        this.customerService.deleteCustomer(username, this.wallet_address).pipe(first()).subscribe((res:any)=>{\n          alert(\"You have deleted customer successfully\"); \n          this.ngOnInit();   \n        },error=>{\n          console.log(error);\n        });\n      }).catch((error)=>{\n        alert(\"Something went wrong please try again in few minutes!\");\n      });\n    } else{\n      this.ngOnInit();  \n    }\n    \n  }\n\n  accessHistory(username){\n    this.ethereumService.customerAccessHistory(username, this.wallet_address).then((result)=>{\n      alert(\"This customer accessed by bank address \"+result);\n      this.ngOnInit();\n    }).catch((error)=>{\n      console.log(\"access history error\", error);\n    });\n  }\n\n  ngOnInit(){\n    this.spinner.show();\n    \n  \tthis.customerService.listCustomer(this.wallet_address).pipe(first()).subscribe((res: any) => {\n      if(res.success == 1){\n      \tthis.customersList = res.data;\n      }\n      this.spinner.hide();\n    },\n    error=>{\n       console.log(error); \n       this.customersList = null;\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, BankRequest } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-request',\n  templateUrl: './list-request.component.html',\n  styleUrls: ['./list-request.component.css']\n})\nexport class ListRequestComponent implements OnInit {\n  currentUser: User;\n  bankRequestLists: Array<BankRequest>;\n  wallet_address;\n  \n  constructor(\n    private spinner: NgxSpinnerService,\n  \tprivate bankService: BankService, \n  \tpublic router: Router, \n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  ) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n    if(this.currentUser.role_id == 2){\n      this.wallet_address = this.currentUser.bank.wallet_address;\n    } else{\n      this.wallet_address = null;\n    }\n  }\n\n  deleteBankRequest(username, data, wallet_address){\n  \tvar con = confirm(\"Are you sure, want to delete bank kyc request?\");\n  \tif(con){\n  \t\tthis.ethereumService.removeRequest(username, data, wallet_address).then((result)=>{\n           this.bankService.deleteBankRequest(username, data, wallet_address).pipe(first()).subscribe((res:any)=>{\n              alert(\"Bank kyc request deleted successfully\");\n              this.ngOnInit(); \n           },\n           error=>{\n\n              alert(\"Something went wrong please try again!\"); \n           });\n          \n\t  \t}).catch((error) =>{\n\t  \t  console.log(\"remove bankrquest error\", error);\n\t      alert(\"Something went wrong please try again!\");\n\t  \t});\n  \t}\n  }\n\n  ngOnInit(){\n    this.spinner.show();\n  \tthis.bankService.listBankRequest(this.wallet_address).pipe(first()).subscribe((res:any)=>{\n       console.log(\"result\", res);\n       if(res.success == 1){\n       \t this.bankRequestLists = res.data;\n       }else{\n       \t this.bankRequestLists = null;\n       }\n       this.spinner.hide();\n  \t},\n  \terror=>{\n      console.log(\"error\", error);\n  \t});\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Bank Requests List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Bank Requests Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"bankRequestLists?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Username</th>\n                <th>Adhar Number</th>\n                <th>Wallet Address</th>\n                <th>Request Index</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            \n            <tbody>\n              <tr *ngFor=\"let bankRequest of bankRequestLists; let num= index;\">\n                <td>{{ (num+1) }}</td>\n                <td>{{ bankRequest.username }}</td>\n                <td>{{ bankRequest.user_data }}</td>\n                <td>{{ bankRequest.wallet_address }}</td>\n                <td>{{ bankRequest.request_index }}</td>\n                <td>\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/banks/requests/view', bankRequest.wallet_address, bankRequest.request_index ]);\" title=\"View bank kyc request\"><i class=\"fas fa-fw fa-eye\"></i></a>\n                    <a  *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBankRequest(bankRequest.username, bankRequest.user_data, bankRequest.wallet_address);\" title=\"Remove bank kyc request\"><i class=\"fas fa-fw fa-trash\"></i></a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!bankRequestLists?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { AuthenticationService, EthereumService, CustomerService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Customer } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-password-customer',\n  templateUrl: './password-customer.component.html',\n  styleUrls: ['./password-customer.component.css']\n})\nexport class PasswordCustomerComponent implements OnInit {\n  passCustomerForm: FormGroup;\n  currentUser: User;\n  customerData: Customer;\n\n  constructor(\n  \tprivate fb: FormBuilder,\n    private route: ActivatedRoute,  \n  \tpublic router: Router, \n  \tprivate customerService: CustomerService,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) { \n  \tthis.customerForm();\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n\n  \tif(this.currentUser.role_id == 1){\n      this.router.navigate(['home']);\n    }\n  }\n\n  customerForm(){\n  \tthis.passCustomerForm = this.fb.group({\n        name: ['', Validators.required],\t\n        password: ['', Validators.required],\n    });\n  }\n\n \n\n  setPassword(username, password){\n    this.ethereumService.setCustPassword(username, password, this.currentUser.bank.wallet_address).then((result)=>{\n      this.customerService.setPassword(username, password, this.currentUser.bank.wallet_address).pipe(first()).subscribe((res: any) => {\n       alert(\"You have changed password successfully\");\n       this.ngOnInit();\n      },error=>{\n        console.log(error);\n      });\n    }).catch((error)=>{\n      alert(\"Something went wrong please try again in few minutes!\");\n    });\n    \n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => {\n  \t\tthis.customerService.viewCustomer(params['id'], params['username']).pipe(first()).subscribe((res:any)=>{\n          if(res.success == 1){\n          \tthis.customerData = res.data;\n          \tthis.passCustomerForm.setValue({\n          \t\tname: res.data.username,\n          \t\tpassword: res.data.password\n          \t});\n          }else{\n          \tthis.customerData = null;\n          }\n  \t\t},error=>{\n          console.log(\"eroor\", error);\n  \t\t});\n  \t});\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Change customer password</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"passCustomerForm\" novalidate *ngIf=\"customerData\">\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name readonly>\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"passCustomerForm.controls['name'].invalid && (passCustomerForm.controls['name'].dirty || passCustomerForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"passCustomerForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"password\" class=\"form-control\" placeholder=\"Password\" autofocus=\"autofocus\" formControlName=\"password\" #password>\n\t                    <label for=\"password\">Password</label>\n\t                </div>\n\t                <p *ngIf=\"passCustomerForm.controls['password'].invalid && (passCustomerForm.controls['password'].dirty || passCustomerForm.controls['password'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"passCustomerForm.controls['password'].errors.required\">  \n\t                    Password is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"setPassword(name.value, password.value)\"  [disabled]=\"passCustomerForm.invalid\">Save</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/_services';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  get isBank() {\n    return this.currentUser && this.currentUser.role_id == 2;\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sidebar -->\n     <ul class=\"sidebar navbar-nav\">\n       <li class=\"nav-item active\">\n         <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">\n           <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n           <span> Dashboard</span>\n         </a>\n       </li>\n       <!--<li class=\"nav-item\">\n         <a class=\"nav-link\" routerLinkActive=\"active\" href=\"/wallet/add\">\n           <i class=\"fas fa-fw fa-wallet\"></i>\n           <span> Wallet Address</span>\n         </a>\n       </li>-->\n       <li class=\"nav-item dropdown\"  >\n         <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-fw fa-landmark\"></i>\n           <span> Banks</span>\n         </a>\n         <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n           <a class=\"dropdown-item\" routerLink=\"/banks\">List</a>\n           <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/banks/add\">Add</a>\n         </div>\n       </li>\n       <li class=\"nav-item dropdown\">\n         <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-fw fa-check-circle\"></i>\n           <span> KYC Requests</span>\n         </a>\n         <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n           <a class=\"dropdown-item\" routerLink=\"/banks/requests\">List</a>\n           <a class=\"dropdown-item\" *ngIf=\"isBank\" routerLink=\"/banks/requests/add\">Add</a>\n         </div>\n       </li>\n       <li class=\"nav-item dropdown\">\n         <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-fw fa-users\"></i>\n           <span> Customers</span>\n         </a>\n         <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n           <a class=\"dropdown-item\" routerLink=\"/customers\">List</a>\n           <a class=\"dropdown-item\" *ngIf=\"isBank\" routerLink=\"/customers/add\">Add</a>\n         </div>\n       </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-bank',\n  templateUrl: './view-bank.component.html',\n  styleUrls: ['./view-bank.component.css']\n})\nexport class ViewBankComponent implements OnInit {\n  currentUser: User;\n  bankData: Bank;\n\n  constructor(\n  \tprivate bankService: BankService,\n  \tprivate route: ActivatedRoute, \n    public router: Router, \n    private authenticationService: AuthenticationService,\n    private ethereumService: EthereumService\n  \t) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => { \n        this.ethereumService.getBank(params['walletAddress']).then((result) => {\n           result[0] = this.ethereumService.web3.utils.hexToString(result[0]);\n           result[4] = this.ethereumService.web3.utils.hexToString(result[4]);\n           this.bankData = result;\n        }).catch((error) => {\n           console.log(error);\n        });\n  \t});\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t\t    <ol class=\"breadcrumb\">\n\t\t       <li class=\"breadcrumb-item\">\n\t\t         <a href=\"index.html\">Dashboard</a>\n\t\t       </li>\n\t\t       <li class=\"breadcrumb-item active\">Bank Details</li>\n\t\t    </ol>\n\t\t    <!-- DataTables Example -->\n\t\t    <div class=\"row\">\n                <div class=\"col-sm-6\">\n\t\t\t\t    <div class=\"card text-white bg-success\">\n\t\t\t\t    \t<div class=\"card-header\">\n\t\t                  <i class=\"fas fa-table\"></i>\n\t\t                   Banks Data\n\t\t                </div>\n\t\t                <div class=\"card-body\" *ngIf=\"bankData\">\n\t\t                \t<h5 class=\"card-title\">Bank Name</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[0] }}</p>\n\t\t                \t<h5 class=\"card-title\">Wallet Address</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[1] }}</p>\n\t\t                \t<h5 class=\"card-title\">Rating</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[2] }}</p>\n\t\t                \t<h5 class=\"card-title\">KYC Count</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[3] }}</p>\n\t\t                \t<h5 class=\"card-title\">Registration Number</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[4] }}</p>\n\t\t                </div>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t    </div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService, AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Customer } from '@app/_models';\n\n@Component({\n  selector: 'app-view-customer',\n  templateUrl: './view-customer.component.html',\n  styleUrls: ['./view-customer.component.css']\n})\nexport class ViewCustomerComponent implements OnInit {\n  currentUser: User;\n  customerData = null;\n  \n  constructor(\n  private customerService: CustomerService,\n  private route: ActivatedRoute, \n  public router: Router, \n  private authenticationService: AuthenticationService,\n  private ethereumService: EthereumService\n  \t) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => { \n\n    \tthis.ethereumService.viewCustomer(params['username'], params['password'], this.currentUser.bank.wallet_address).then((result) => {\n          this.customerData = this.ethereumService.web3.utils.hexToString(result);\n    \t}).catch((error) => {\n           console.log(\"Error\", error);\n    \t});\n    });\n\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t\t    <ol class=\"breadcrumb\">\n\t\t       <li class=\"breadcrumb-item\">\n\t\t         <a href=\"index.html\">Dashboard</a>\n\t\t       </li>\n\t\t       <li class=\"breadcrumb-item active\">Customer Details</li>\n\t\t    </ol>\n\t\t    <!-- DataTables Example -->\n\t\t    <div class=\"row\">\n                <div class=\"col-sm-6\">\n\t\t\t\t    <div class=\"card text-white bg-success\">\n\t\t\t\t    \t<div class=\"card-header\">\n\t\t                  <i class=\"fas fa-table\"></i>\n\t\t                   Customer Data\n\t\t                </div>\n\t\t                <div class=\"card-body\" *ngIf=\"customerData\">\n\t\t                \t<h5 class=\"card-title\">Adhar Number</h5>\n\t\t                \t<p class=\"card-text\">{{  customerData }}</p>\n\t\t                </div>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t    </div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, BankRequest } from '@app/_models';\n\n@Component({\n  selector: 'app-view-request',\n  templateUrl: './view-request.component.html',\n  styleUrls: ['./view-request.component.css']\n})\nexport class ViewRequestComponent implements OnInit {\n  currentUser: User;\n  requestData: BankRequest;\n  \n  constructor(\n    private bankService: BankService,\n  \tprivate route: ActivatedRoute, \n    public router: Router, \n    private authenticationService: AuthenticationService,\n    private ethereumService: EthereumService\n  ) { \n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n    this.route.params.subscribe(params => { \n    \tthis.ethereumService.getBankRequest(params['walletAddress'], params['index']).then((result) => {\n          console.log(\"Result\", result);\n          result[0] = this.ethereumService.web3.utils.hexToString(result[0]);\n          result[1] = this.ethereumService.web3.utils.hexToString(result[1]);\n          this.requestData = result;\n\n    \t}).catch((error) => {\n           console.log(\"Error\", error);\n    \t});\n    });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t\t    <ol class=\"breadcrumb\">\n\t\t       <li class=\"breadcrumb-item\">\n\t\t         <a href=\"index.html\">Dashboard</a>\n\t\t       </li>\n\t\t       <li class=\"breadcrumb-item active\">Bank Request KYC Details</li>\n\t\t    </ol>\n\t\t    <!-- DataTables Example -->\n\t\t    <div class=\"row\">\n                <div class=\"col-sm-6\">\n\t\t\t\t    <div class=\"card text-white bg-success\">\n\t\t\t\t    \t<div class=\"card-header\">\n\t\t                  <i class=\"fas fa-table\"></i>\n\t\t                   Banks Data\n\t\t                </div>\n\t\t                <div class=\"card-body\" *ngIf=\"requestData\">\n\t\t                \t<h5 class=\"card-title\">Username</h5>\n\t\t                \t<p class=\"card-text\">{{  requestData[0] }}</p>\n\t\t                \t<h5 class=\"card-title\">Adhar Number</h5>\n\t\t                \t<p class=\"card-text\">{{  requestData[1] }}</p>\n\t\t                \t<h5 class=\"card-title\">Wallet Address(Bank)</h5>\n\t\t                \t<p class=\"card-text\">{{  requestData[2] }}</p>\n\t\t                \t<h5 class=\"card-title\"> Can register as customer?</h5>\n\t\t                \t<p class=\"card-text\">{{  (requestData[3]) ? 'Yes': 'No' }}</p>\n\t\t                </div>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t    </div>\n\t\t</div>\n\t</div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://kyc.local',\n  RPCProvider: 'http://127.0.0.1:7545',\n  ContractAddress : '0x06Aa76a46443244D4092181BC18545bBaF5a8e11',\n  WalletAddress : '0xc9eCB58B4c96DE1fC48d41B4ef3D4421F6d52aF5'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}