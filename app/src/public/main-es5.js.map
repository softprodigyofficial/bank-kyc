{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/bank.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/add-bank/add-bank.component.ts","webpack:///src/app/add-bank/add-bank.component.html","webpack:///src/app/admin-login/admin-login.component.ts","webpack:///src/app/admin-login/admin-login.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/list-bank/list-bank.component.ts","webpack:///src/app/list-bank/list-bank.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/view-bank/view-bank.component.ts","webpack:///src/app/view-bank/view-bank.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authenticationService","router","next","state","isLoggedIn","navigate","providedIn","AuthInterceptor","accessToken","getAccessToken","clone","setHeaders","Authorization","Pragma","handle","ErrorInterceptor","request","pipe","err","indexOf","status","logout","location","reload","error","message","statusText","AuthenticationService","http","endpoint","apiUrl","headers","set","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","console","log","email","password","api_url","data","post","res","setItem","user","stringify","authToken","removeItem","value","BankService","name","wallet_address","rgNumber","rn","get","UserService","put","AddBankComponent","fb","bankService","bankForm","currentUserValue","bankAddForm","group","required","walletAddress","addBank","subscribe","success","alert","selector","templateUrl","styleUrls","AdminLoginComponent","login","loginForm","adminLoginForm","inputEmail","inputPassword","adminLogin","body","document","getElementsByTagName","classList","add","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","x","role_id","AppModule","provide","useClass","multi","declarations","providers","bootstrap","FooterComponent","HeaderComponent","HomeComponent","userService","loading","remove","getById","userFromApi","ListBankComponent","listBank","banksList","result","confirm","deleteBank","ngOnInit","SidebarComponent","ViewBankComponent","route","params","viewBank","bankData","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \r\nUrlTree, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n  constructor(\r\n    public authenticationService : AuthenticationService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authenticationService.isLoggedIn() !== true) {\r\n      this.router.navigate(['login']);\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService : AuthenticationService ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const accessToken = this.authenticationService.getAccessToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: `JWT $[accessToken}`,\n                'Cache-Control': 'no-cache',\n                Pragma: 'no-cache' \n            }\n        });\n        return next.handle(req);\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export * from './auth.interceptor';\nexport * from './auth.guard';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\nimport { User } from '@app/_models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  endpoint: string = `${environment.apiUrl}`;\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  \n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  \n  constructor(private http: HttpClient, public router: Router) { \n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n    console.log(this.currentUser);\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  adminLogin(email, password){\n  \tlet api_url = `${this.endpoint}/v1/admin/login`;\n  \tconst data = {\n        email, password\n  \t};\n  \t\n    return this.http.post<any>(api_url, data).pipe(map((res: any) => {\n        if(res.data){\n          localStorage.setItem('access_token', res.data.user.id);\n          localStorage.setItem('currentUser', JSON.stringify(res.data.user));\n          this.currentUserSubject.next(res.data.user);\n        }\n        return res.data;\n    }));\n\n  }\n\n\n  getAccessToken(){\n  \treturn localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null && localStorage.removeItem('currentUser') == null) {\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\nimport { Bank, User } from '@app/_models';\r\n\r\n@Injectable({ \r\n\tprovidedIn: 'root' \r\n})\r\n\r\nexport class BankService{\r\n\theaders = new HttpHeaders().set('Content-Type', 'application/json');\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\taddBank(name: string, wallet_address: string, rgNumber: string, email: string, password: string): Observable<Bank>{\r\n        return this.http.post<Bank>(`${environment.apiUrl}/v1/bank/add`, {name: name, wallet_address: wallet_address, rn: rgNumber, email: email, password: password });\r\n\t}\r\n\r\n\tlistBank():Observable<Bank>{\r\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/list`);\r\n\t}\r\n\r\n\tviewBank(wallet_address: string): Observable<Bank>{\r\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/show/${wallet_address}`);\r\n\t}\r\n\r\n\tdeleteBank(wallet_address: string): Observable<Bank>{\r\n\t   return this.http.post<Bank>(`${environment.apiUrl}/v1/bank/delete`,{wallet_address: wallet_address});\t\r\n\t}\r\n}","export * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './bank.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models';\r\n\r\n@Injectable({ \r\n\tprovidedIn: 'root' \r\n})\r\n\r\nexport class UserService{\r\n\r\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/v1/users`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        //var d = new Date();\r\n        return this.http.get<User>(`${environment.apiUrl}/v1/user/${id}`);\r\n    }\r\n\r\n    addWalletAddress(wallet_address: string, id: number): Observable<User>{\r\n       return this.http.put<User>(`${environment.apiUrl}/v1/user/wallet-address`, {id: id, wallet_address: wallet_address });\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-bank',\n  templateUrl: './add-bank.component.html',\n  styleUrls: ['./add-bank.component.css']\n})\nexport class AddBankComponent implements OnInit {\n  bankAddForm: FormGroup;\t\n  currentUser: User;\n\n    constructor(\n  \tprivate fb: FormBuilder, \n  \tprivate bankService: BankService, \n  \tpublic router: Router, \n  \tprivate authenticationService: AuthenticationService) { \n  \t   this.bankForm();\n  \t   this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    bankForm(){\n        this.bankAddForm = this.fb.group({\n          name: ['', Validators.required],\t\n          walletAddress: ['', Validators.required],\n          rgNumber: ['', Validators.required],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', Validators.required]\n        });\n    }\n\n    addBank(name, wallet_address, rgNumber, email, password){\n      console.log(\"name\", name, wallet_address,rgNumber,email,password);\n       this.bankService.addBank(name, wallet_address, rgNumber, email, password).pipe(first()).subscribe((res:any)=>{\n        if(res.success ==  1){\n            alert(\"Bank added successfully\");\n            this.router.navigate(['banks']);\n        }\n       },\n      error =>{\n          console.log(error);\n          alert(\"This bank already exist\");\n      });\n    }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Add Bank</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankAddForm\" novalidate>\n           \t     <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Bank Name</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['name'].invalid && (bankAddForm.controls['name'].dirty || bankAddForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['name'].errors.required\">  \n\t                    Bank name is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"walletAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"walletAddress\" #walletAddress>\n\t                    <label for=\"walletAddress\">Wallet Address</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['walletAddress'].invalid && (bankAddForm.controls['walletAddress'].dirty || bankAddForm.controls['walletAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['walletAddress'].errors.required\">  \n\t                    Wallet address is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"rgNumber\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"rgNumber\" #rgNumber>\n\t                    <label for=\"rgNumber\">Register Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['rgNumber'].invalid && (bankAddForm.controls['rgNumber'].dirty || bankAddForm.controls['rgNumber'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['rgNumber'].errors.required\">  \n\t                    Register number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"email\" #email>\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['email'].invalid && (bankAddForm.controls['email'].dirty || bankAddForm.controls['email'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['email'].errors.required\">  \n                      Email is required.  \n                    </span> \n                    <span *ngIf=\"bankAddForm.controls['email'].errors.email\">Enter a valid email address</span> \n                  </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"password\" #password>\n                    <label for=\"password\">Password</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['password'].invalid && (bankAddForm.controls['password'].dirty || bankAddForm.controls['password'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['password'].errors.required\">  \n                      Password is required.  \n                    </span> \n                  </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBank(name.value, walletAddress.value, rgNumber.value, email.value, password.value)\"  [disabled]=\"bankAddForm.pristine || bankAddForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms'; \r\nimport { AuthenticationService } from '@app/_services';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n\r\n  adminLoginForm: FormGroup;\r\n  \r\n  constructor(private fb: FormBuilder, private login: AuthenticationService, public router: Router) { \r\n    this.loginForm();\r\n    if(this.login.isLoggedIn() == true){\r\n       this.router.navigate(['home']);\r\n    }\r\n  }\r\n\r\n  loginForm(){\r\n    this.adminLoginForm = this.fb.group({\r\n      inputEmail: ['', [Validators.required, Validators.email]],\r\n      inputPassword: ['', Validators.required] \r\n    });\r\n  }\r\n\r\n  adminLogin(inputEmail, inputPassword){\r\n  \tthis.login.adminLogin(inputEmail, inputPassword)\r\n    .pipe(first())\r\n    .subscribe(data => {\r\n      this.router.navigate(['home']);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.add('bg-dark');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\n  <div class=\"card card-login mx-auto mt-5\">\n    <div class=\"card-header\">Login</div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"adminLoginForm\" novalidate>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" autofocus=\"autofocus\" formControlName=\"inputEmail\" id=\"inputEmail\" #inputEmail>\n            <label for=\"inputEmail\">Email address</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputEmail'].invalid && (adminLoginForm.controls['inputEmail'].dirty || adminLoginForm.controls['inputEmail'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.required\">  \n              Email is required.  \n            </span> \n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.email\">Enter a valid email address</span> \n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"inputPassword\" id=\"inputPassword\" #inputPassword>\n            <label for=\"inputPassword\">Password</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputPassword'].invalid && (adminLoginForm.controls['inputPassword'].dirty || adminLoginForm.controls['inputPassword'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputPassword'].errors.required\">  \n              Password is required.  \n            </span>  \n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" value=\"remember-me\">\n              Remember Password\n            </label>\n          </div>\n        </div>\n        <button type=\"submit\"  (click)=\"adminLogin(inputEmail.value, inputPassword.value)\" class=\"btn btn-primary btn-block\"   [disabled]=\"adminLoginForm.pristine || adminLoginForm.invalid\" >Login</button>\n      </form>\n      <div class=\"text-center\">\n        <a class=\"d-block small mt-3\" href=\"register.html\">Register an Account</a>\n        <a class=\"d-block small\" href=\"forgot-password.html\">Forgot Password?</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { AuthGuard } from '@app/_helpers';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'login', component: AdminLoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'banks/add', component: AddBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks', component: ListBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/view/:walletAddress', component: ViewBankComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'angular-app';\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  \tconsole.log(\"ffff\", this.currentUser);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  logout() {\n  \tthis.authenticationService.logout();\n  \tthis.router.navigate(['/login']);\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AuthInterceptor, ErrorInterceptor } from '@app/_helpers';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\r\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    FooterComponent,\r\n    AdminLoginComponent,\r\n    AddBankComponent,\r\n    ListBankComponent,\r\n    ViewBankComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sticky Footer -->\n<footer class=\"sticky-footer\">\n  <div class=\"container my-auto\">\n      <div class=\"copyright text-center my-auto\">\n        <span>Copyright © Your Website 2018</span>\n      </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '@app/_services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n\r\n  constructor(public authenticationService: AuthenticationService) { }\r\n\r\n  logout() {\r\n    this.authenticationService.logout()\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark static-top\">\n\n     <a class=\"navbar-brand mr-1\" href=\"index.html\">Start Bootstrap</a>\n\n     <button class=\"btn btn-link btn-sm text-white order-1 order-sm-0\" id=\"sidebarToggle\" href=\"#\">\n       <i class=\"fas fa-bars\"></i>\n     </button>\n\n     <!-- Navbar Search -->\n     <form class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n       <div class=\"input-group\">\n         <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n         <div class=\"input-group-append\">\n           <button class=\"btn btn-primary\" type=\"button\">\n             <i class=\"fas fa-search\"></i>\n           </button>\n         </div>\n       </div>\n     </form>\n\n     <!-- Navbar -->\n     <ul class=\"navbar-nav ml-auto ml-md-0\">\n       <li class=\"nav-item dropdown no-arrow mx-1\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-bell fa-fw\"></i>\n           <span class=\"badge badge-danger\">9+</span>\n         </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"alertsDropdown\">\n           <a class=\"dropdown-item\" href=\"#\">Action</a>\n           <a class=\"dropdown-item\" href=\"#\">Another action</a>\n           <div class=\"dropdown-divider\"></div>\n           <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n         </div>\n       </li>\n       <li class=\"nav-item dropdown no-arrow mx-1\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-envelope fa-fw\"></i>\n           <span class=\"badge badge-danger\">7</span>\n         </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"messagesDropdown\">\n           <a class=\"dropdown-item\" href=\"#\">Action</a>\n           <a class=\"dropdown-item\" href=\"#\">Another action</a>\n           <div class=\"dropdown-divider\"></div>\n           <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n         </div>\n       </li>\n       <li class=\"nav-item dropdown no-arrow\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-user-circle fa-fw\"></i>\n         </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\n           <a class=\"dropdown-item\" href=\"#\">Settings</a>\n           <a class=\"dropdown-item\" href=\"#\">Activity Log</a>\n           <div class=\"dropdown-divider\"></div>\n           <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n         </div>\n       </li>\n     </ul>\n\n   </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, AuthenticationService } from '@app/_services';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  currentUser: User;\n  userFromApi: User;\n  \n  constructor(private userService: UserService, private authenticationService: AuthenticationService) { \n    this.currentUser = this.authenticationService.currentUserValue;\n    console.log(this.currentUser);\n  }\n\n  ngOnInit(){\n\n  \tconst body = document.getElementsByTagName('body')[0];\n    body.classList.remove('bg-dark');\n\n    this.loading = true;\n    this.userService.getById(this.currentUser.id).pipe(first()).subscribe( (user: any) => {\n      this.loading = false;\n      this.userFromApi = user.data;\n    });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n\n         <!-- Breadcrumbs-->\n         <ol class=\"breadcrumb\">\n           <li class=\"breadcrumb-item\">\n             <a href=\"#\">Dashboard</a>\n           </li>\n           <li class=\"breadcrumb-item active\">Overview</li>\n         </ol>\n\n         <!-- Icon Cards-->\n         <!--<div class=\"row\">\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-primary o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-comments\"></i>\n                 </div>\n                 <div class=\"mr-5\">26 New Messages!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-warning o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-list\"></i>\n                 </div>\n                 <div class=\"mr-5\">11 New Tasks!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-success o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-shopping-cart\"></i>\n                 </div>\n                 <div class=\"mr-5\">123 New Orders!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n           <div class=\"col-xl-3 col-sm-6 mb-3\">\n             <div class=\"card text-white bg-danger o-hidden h-100\">\n               <div class=\"card-body\">\n                 <div class=\"card-body-icon\">\n                   <i class=\"fas fa-fw fa-life-ring\"></i>\n                 </div>\n                 <div class=\"mr-5\">13 New Tickets!</div>\n               </div>\n               <a class=\"card-footer text-white clearfix small z-1\" href=\"#\">\n                 <span class=\"float-left\">View Details</span>\n                 <span class=\"float-right\">\n                   <i class=\"fas fa-angle-right\"></i>\n                 </span>\n               </a>\n             </div>\n           </div>\n         </div>-->\n\n         <div class=\"row\">\n            <div class=\"col-md-12 col-xl-12 col-sm-12\">\n              <div class=\"card mt-4\">\n                <h4 class=\"card-header\">Home</h4>\n                <div class=\"card-body\">\n                  <p>You're logged in with Angular 8 & JWT!!</p>\n                  <p>Your role is: <strong >{{ (currentUser.role_id == 1)? 'Admin' : 'Bank' }}</strong>.</p>\n                  <p>This page can be accessed by <u>all authenticated users</u>.</p>\n                  <p class=\"mb-1\">Current user from secure api end point:</p>\n                  <!--<div *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\"></div>-->\n                  <ul *ngIf=\"userFromApi\">\n                     <li>{{userFromApi.firstName}} {{userFromApi.lastName}}</li>\n                 </ul>\n                </div>\n              </div>\n            </div>\n         </div>\n         \n\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list-bank',\n  templateUrl: './list-bank.component.html',\n  styleUrls: ['./list-bank.component.css']\n})\nexport class ListBankComponent implements OnInit {\n  currentUser: User;\n  banksList:Array<Bank>;\n  \n  constructor(\n  private bankService: BankService, \n  public router: Router, \n  private authenticationService: AuthenticationService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n    this.bankService.listBank().pipe(first()).subscribe((res: any) => {\n      if(res.success == 1){\n      \tthis.banksList = res.data;\n      }\n    },\n    error=>{\n       console.log(error); \n    });\n  }\n\n  deleteBank(walletAddress){\n    var result = confirm(\"Are you sure, want to delete bank?\");\n    if(result){\n      this.bankService.deleteBank(walletAddress).pipe(first()).subscribe((res: any) => {\n        if(res.success == 1){\n          this.ngOnInit();\n        }\n      },\n      error =>{\n        alert(\"Something went wrong, please try again after few minutes\");\n      });\n    }\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"index.html\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Banks List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Banks Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"banksList?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Name</th>\n                <th>Wallet Adderss</th>\n                <th>Registered Number</th>\n                <th>Transaction Id</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            \n            <tbody>\n              <tr *ngFor=\"let bank of banksList; let num= index;\">\n                <td>{{ (num+1) }}</td>\n                <td>{{ bank.name }}</td>\n                <td>{{ bank.wallet_address }}</td>\n                <td>{{ bank.rg_number }}</td>\n                <td>{{ bank.eth_transaction_id }}</td>\n                <td>\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/banks/view', bank.wallet_address ]);\"><i class=\"fas fa-fw fa-eye\"></i></a>\n                \t<a href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBank(bank.wallet_address);\"><i class=\"fas fa-fw fa-trash\"></i></a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!banksList?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/_services';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  \tconsole.log(\"ffff\", this.currentUser);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sidebar -->\n     <ul class=\"sidebar navbar-nav\">\n       <li class=\"nav-item active\">\n         <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">\n           <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n           <span> Dashboard</span>\n         </a>\n       </li>\n       <!--<li class=\"nav-item\">\n         <a class=\"nav-link\" routerLinkActive=\"active\" href=\"/wallet/add\">\n           <i class=\"fas fa-fw fa-wallet\"></i>\n           <span> Wallet Address</span>\n         </a>\n       </li>-->\n       <li class=\"nav-item dropdown\"  *ngIf=\"isAdmin\">\n         <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-fw fa-users\"></i>\n           <span>Banks</span>\n         </a>\n         <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n           <a class=\"dropdown-item\" routerLink=\"/banks\">List</a>\n           <a class=\"dropdown-item\" routerLink=\"/banks/add\">Add</a>\n         </div>\n       </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-bank',\n  templateUrl: './view-bank.component.html',\n  styleUrls: ['./view-bank.component.css']\n})\nexport class ViewBankComponent implements OnInit {\n  currentUser: User;\n  bankData: Bank;\n\n  constructor(\n  \tprivate bankService: BankService,\n  \tprivate route: ActivatedRoute, \n    public router: Router, \n    private authenticationService: AuthenticationService\n  \t) { \n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => { \n  \t\tthis.bankService.viewBank(params['walletAddress']).pipe(first()).subscribe((res: any)=>{\n          if(res.success == 1){\n          \tthis.bankData = res.data;\n          }\n  \t\t}, \n  \t\terror=>{\n            console.log(error);\n  \t\t});\n  \t});\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t\t    <ol class=\"breadcrumb\">\n\t\t       <li class=\"breadcrumb-item\">\n\t\t         <a href=\"index.html\">Dashboard</a>\n\t\t       </li>\n\t\t       <li class=\"breadcrumb-item active\">Bank Details</li>\n\t\t    </ol>\n\t\t    <!-- DataTables Example -->\n\t\t    <div class=\"row\">\n                <div class=\"col-sm-6\">\n\t\t\t\t    <div class=\"card text-white bg-success\">\n\t\t\t\t    \t<div class=\"card-header\">\n\t\t                  <i class=\"fas fa-table\"></i>\n\t\t                   Banks Data\n\t\t                </div>\n\t\t                <div class=\"card-body\">\n\t\t                \t<h5 class=\"card-title\">Bank Name</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[0] }}</p>\n\t\t                \t<h5 class=\"card-title\">Wallet Address</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[1] }}</p>\n\t\t                \t<h5 class=\"card-title\">Rating</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[2] }}</p>\n\t\t                \t<h5 class=\"card-title\">KYC Count</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[3] }}</p>\n\t\t                \t<h5 class=\"card-title\">Registration Number</h5>\n\t\t                \t<p class=\"card-text\">{{  bankData[4] }}</p>\n\t\t                </div>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t    </div>\n\t\t</div>\n\t</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}