{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///(webpack)/buildin/global.js","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/role_auth.guard.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/bank.service.ts","webpack:///src/app/_services/ethereum.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/add-bank/add-bank.component.ts","webpack:///src/app/add-bank/add-bank.component.html","webpack:///src/app/add-request/add-request.component.html","webpack:///src/app/add-request/add-request.component.ts","webpack:///src/app/admin-login/admin-login.component.html","webpack:///src/app/admin-login/admin-login.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/list-bank/list-bank.component.ts","webpack:///src/app/list-bank/list-bank.component.html","webpack:///src/app/list-request/list-request.component.html","webpack:///src/app/list-request/list-request.component.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/view-bank/view-bank.component.ts","webpack:///src/app/view-bank/view-bank.component.html","webpack:///src/app/view-customer/view-customer.component.html","webpack:///src/app/view-customer/view-customer.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///buffer (ignored)","webpack:///util (ignored)","webpack:///util (ignored)?e312","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","g","Function","window","AuthGuard","authenticationService","router","next","state","isLoggedIn","navigate","providedIn","AuthInterceptor","accessToken","getAccessToken","clone","setHeaders","Authorization","Pragma","handle","ErrorInterceptor","request","pipe","err","indexOf","status","logout","location","reload","error","message","statusText","RoleAuthGuard","currentUserValue","role_id","AuthenticationService","http","endpoint","apiUrl","headers","set","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","email","password","api_url","data","post","res","setItem","user","stringify","authToken","removeItem","value","BankService","name","wallet_address","rgNumber","rn","get","kyc","Web3","EthereumService","ready","accountsObservable","refreshAccounts","web3","eth","getAccounts","accs","console","warn","length","accounts","log","kycWeb3","ethereum","enable","currentProvider","providers","HttpProvider","prototype","sendAsync","send","RPCProvider","enableAccounts","contract","Contract","ContractAddress","methods","getBank","call","getBankRating","bank_session_wallet_address","getTransactionCount","nonce","upvoteBank","from","username","addRequest","utils","asciiToHex","index","getBankRequest","getBankRequestsNum","removeRequest","addCustomer","upvoteCust","viewCustomer","getCustRating","modifyCustomer","removeCustomer","setCustPassword","accessHistory","UserService","AddBankComponent","fb","bankService","bankForm","bankAddForm","group","required","walletAddress","addBank","subscribe","success","alert","selector","templateUrl","styleUrls","AddRequestComponent","ethereumService","bankRequestForm","adharAddress","adhareAddress","bank","result","addBankRequest","AdminLoginComponent","login","undefined","walletLogin","getCoinbase","coinbase","personal","sign","signature","loginForm","adminLoginForm","inputEmail","inputPassword","adminLogin","body","document","getElementsByTagName","classList","add","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","x","AppModule","provide","useClass","multi","declarations","bootstrap","FooterComponent","HeaderComponent","HomeComponent","userService","loading","remove","getById","userFromApi","ListBankComponent","spinner","show","listBank","banksList","hide","confirm","deleteBank","ngOnInit","bankSessionWalletAddress","upvotebank","ListRequestComponent","last","bankRequestLists","total","perload","con","cnt","results","push","hexToString","user_data","is_active","loadRequests","SidebarComponent","ViewBankComponent","route","params","bankData","ViewCustomerComponent","displayCustomer","aadhaar_number","rating","custForm","viewCustomerForm","del","customerAccessHistory","prompt","environment","production","apiUrl2","WalletAddress","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \nUrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(\n    public authenticationService : AuthenticationService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.isLoggedIn() !== true) {\n      this.router.navigate(['login']);\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authenticationService : AuthenticationService ) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const accessToken = this.authenticationService.getAccessToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: `JWT $[accessToken}`,\n                'Cache-Control': 'no-cache',\n                Pragma: 'no-cache' \n            }\n        });\n        return next.handle(req);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.interceptor';\nexport * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './role_auth.guard';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, \nUrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleAuthGuard implements CanActivate {\n  \n  constructor(\n    public authenticationService : AuthenticationService,\n    public router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authenticationService.currentUserValue.role_id !== 1) {\n      this.router.navigate(['home']);\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n\n  endpoint: string = `${environment.apiUrl}`;\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient, public router: Router) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  adminLogin(email, password){\n  \tlet api_url = `${this.endpoint}/v1/admin/login`;\n  \tconst data = { email, password };\n\n    return this.http.post<any>(api_url, data).pipe(map((res: any) => {\n        if(res.data){\n          localStorage.setItem('access_token', res.data.user.id);\n          localStorage.setItem('currentUser', JSON.stringify(res.data.user));\n          this.currentUserSubject.next(res.data.user);\n        }\n        return res.data;\n    }));\n\n  }\n\n  getAccessToken(){\n  \treturn localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  logout() {\n    if (localStorage.removeItem('access_token') == null && localStorage.removeItem('currentUser') == null) {\n      this.router.navigate(['login']);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Bank, User, BankRequest } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class BankService{\n\t\n\theaders = new HttpHeaders().set('Content-Type', 'application/json');\n\tconstructor(private http: HttpClient) { }\n\n\taddBank(name: string, wallet_address: string, rgNumber: string, email: string, password: string): Observable<Bank>{\n\t\treturn this.http.post<Bank>(`${environment.apiUrl}/v1/bank/add`, {name: name, wallet_address: wallet_address, rn: rgNumber, email: email, password: password });\n\t}\n\n\tlistBank():Observable<Bank>{\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/list`);\n\t}\n\n\tviewBank(wallet_address: string): Observable<Bank>{\n\t\treturn this.http.get<Bank>(`${environment.apiUrl}/v1/bank/show/${wallet_address}`);\n\t}\n\n\tdeleteBank(wallet_address: string): Observable<Bank>{\n\t   return this.http.post<Bank>(`${environment.apiUrl}/v1/bank/delete`,{wallet_address: wallet_address});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { environment } from '@environments/environment';\n\ndeclare let require: any;\ndeclare let window: any;\ndeclare let ethereum: any;\n\nlet kyc = require('./kyc.json');\nconst Web3 = require('web3');\n\n@Injectable({ providedIn: 'root' })\nexport class EthereumService {\n  public web3: any;\n  private contract: any;\n  private accounts: string[];\n  public ready = false;\n\n  public accountsObservable = new Subject<string[]>();\n\n    constructor() { this.kycWeb3(); }\n\n    private async enableAccounts() {\n\t    if (window.ethereum) {\n\t      window.web3 = new Web3(ethereum);\n\t      try {\n\t        // Request account access if needed\n\t        await ethereum.enable();\n\t      } catch (error) {\n\t        // User denied account access...\n\t      }\n\t    }\n    }\n\n    public kycWeb3(){\n      if (typeof window.web3 !== 'undefined') {\n         this.web3 = new Web3(new Web3(window.web3.currentProvider));\n      } else {\n          Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n          this.web3 = new Web3(new Web3.providers.HttpProvider(environment.RPCProvider));\n          //console.log(this.web3);\n      }\n\n      console.log(\"this web3\", this.web3);\n      this.enableAccounts().then(() => {\n        this.refreshAccounts();\n      });\n\n      this.contract = new this.web3.eth.Contract(kyc, environment.ContractAddress);\n\n\t   }\n\n    public getProvider() {\n       return this.web3.currentProvider;\n    }\n\n    public getAccount() {\n      if (!this.accounts) {\n        console.log('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n        return null;\n      }\n      return this.accounts[0];\n    }\n\n    public refreshAccounts = () => {\n      if (typeof window.web3 !== 'undefined') {\n\t      this.web3.eth.getAccounts((err, accs) => {\n\t        if (err != null) {\n\t          console.warn('There was an error fetching your accounts.');\n\t          return;\n\t        }\n\n\t        // Get the initial account balance so it can be displayed.\n\t        if (accs.length === 0) {\n\t          console.warn('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n\t          return;\n\t        }\n\n\t        if (!this.accounts || this.accounts.length !== accs.length || this.accounts[0] !== accs[0]) {\n\t          console.log('Observed new accounts');\n\t          this.accountsObservable.next(accs);\n\t          this.accounts = accs;\n\t        }\n\n\t        this.ready = true;\n\t      });\n      }\n    };\n\n    public getBank(wallet_address: string): Promise<any>{\n   \t   return this.contract.methods.getBank(wallet_address).call();\n    }\n\n    public getBankRating(wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getBankRating(wallet_address).call();\n    }\n\n    public async upvotebank(wallet_address: string, bank_session_wallet_address: string): Promise<any>{\n       let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n       return this.contract.methods.upvoteBank(wallet_address).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async addRequest(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.addRequest(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce: nonce, from: bank_session_wallet_address});\n    }\n\n    public getBankRequest(wallet_address: string, index: number): Promise<any>{\n    \treturn this.contract.methods.getBankRequest(wallet_address, index).call({from: wallet_address});\n    }\n\n    public getBankRequestsNum(wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getBankRequestsNum(wallet_address).call({from: wallet_address});\n    }\n\n    public async removeRequest(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.removeRequest(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async addCustomer(username: string, data: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.addCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async upvoteCust(username: string, bank_session_wallet_address: string): Promise<any>{\n    \tlet nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n    \treturn this.contract.methods.upvoteCust(Web3.utils.asciiToHex(username)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public viewCustomer(username: string, password: string, bank_session_wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.viewCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password)).call({from: bank_session_wallet_address});\n    }\n\n    public getCustRating(username: string, bank_session_wallet_address: string): Promise<any>{\n    \treturn this.contract.methods.getCustRating(Web3.utils.asciiToHex(username)).call({from: bank_session_wallet_address});\n    }\n\n    public async modifyCustomer(username: string, password: string, data: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.modifyCustomer(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password), Web3.utils.asciiToHex(data)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async removeCustomer(username: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.removeCustomer(Web3.utils.asciiToHex(username)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public async setCustPassword(username: string, password: string, bank_session_wallet_address: string): Promise<any>{\n      let nonce = await this.web3.eth.getTransactionCount(bank_session_wallet_address);\n      return this.contract.methods.setCustPassword(Web3.utils.asciiToHex(username), Web3.utils.asciiToHex(password)).send({nonce:nonce, from: bank_session_wallet_address});\n    }\n\n    public customerAccessHistory(username: string, bank_session_wallet_address:string): Promise<any>{\n      return this.contract.methods.accessHistory(Web3.utils.asciiToHex(username)).call({from: bank_session_wallet_address});\n    }\n\n}\n","export * from './authentication.service';\nexport * from './user.service';\nexport * from './bank.service';\nexport * from './ethereum.service';\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class UserService{\n\n    headers = new HttpHeaders().set('Content-Type', 'application/json');\n\t\tconstructor(private http: HttpClient) { }\n\n    getById(id: number) {\n      //var d = new Date();\n      return this.http.get<User>(`${environment.apiUrl}/v1/user/${id}`);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-bank',\n  templateUrl: './add-bank.component.html',\n  styleUrls: ['./add-bank.component.css']\n})\nexport class AddBankComponent implements OnInit {\n  bankAddForm: FormGroup;\n  currentUser: User;\n\n    constructor(\n  \tprivate fb: FormBuilder,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService) {\n  \t   this.bankForm();\n  \t   this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    bankForm(){\n        this.bankAddForm = this.fb.group({\n          name: ['', Validators.required],\n          walletAddress: ['', Validators.required],\n          rgNumber: ['', Validators.required],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', Validators.required]\n        });\n    }\n\n    addBank(name, wallet_address, rgNumber, email, password){\n      console.log(\"name\", name, wallet_address,rgNumber,email,password);\n       this.bankService.addBank(name, wallet_address, rgNumber, email, password).pipe(first()).subscribe((res:any)=>{\n        if(res.success ==  1){\n            alert(\"Bank added successfully\");\n            this.router.navigate(['banks']);\n        } else {\n          console.log(\"Something went wrong\");\n          console.log(res);\n        }\n      }, error =>{\n        console.log(error);\n        alert(error.message);\n      });\n    }\n\n    ngOnInit(): void { }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Add Bank</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankAddForm\" novalidate>\n           \t     <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Bank Name</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['name'].invalid && (bankAddForm.controls['name'].dirty || bankAddForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['name'].errors.required\">  \n\t                    Bank name is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"walletAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"walletAddress\" #walletAddress>\n\t                    <label for=\"walletAddress\">Wallet Address</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['walletAddress'].invalid && (bankAddForm.controls['walletAddress'].dirty || bankAddForm.controls['walletAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['walletAddress'].errors.required\">  \n\t                    Wallet address is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"rgNumber\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"rgNumber\" #rgNumber>\n\t                    <label for=\"rgNumber\">Register Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankAddForm.controls['rgNumber'].invalid && (bankAddForm.controls['rgNumber'].dirty || bankAddForm.controls['rgNumber'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankAddForm.controls['rgNumber'].errors.required\">  \n\t                    Register number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"email\" #email>\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['email'].invalid && (bankAddForm.controls['email'].dirty || bankAddForm.controls['email'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['email'].errors.required\">  \n                      Email is required.  \n                    </span> \n                    <span *ngIf=\"bankAddForm.controls['email'].errors.email\">Enter a valid email address</span> \n                  </p>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"form-label-group\">\n                    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Email\" autofocus=\"autofocus\" formControlName=\"password\" #password>\n                    <label for=\"password\">Password</label>\n                  </div>\n                  <p *ngIf=\"bankAddForm.controls['password'].invalid && (bankAddForm.controls['password'].dirty || bankAddForm.controls['password'].touched)\" class=\"alert-danger\">\n                    <span *ngIf=\"bankAddForm.controls['password'].errors.required\">  \n                      Password is required.  \n                    </span> \n                  </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBank(name.value, walletAddress.value, rgNumber.value, email.value, password.value)\"  [disabled]=\"bankAddForm.pristine || bankAddForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Request KYC</li>\n     </ol>\n    \n     <div class=\"card card-register mx-auto mt-5\">\n         <div class=\"card-header\"></div>\n         <div class=\"card-body\">\n           <form [formGroup]=\"bankRequestForm\" novalidate>\n           \t    <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n\t                    <label for=\"name\">Username</label>\n\t                </div>\n\t                <p *ngIf=\"bankRequestForm.controls['name'].invalid && (bankRequestForm.controls['name'].dirty || bankRequestForm.controls['name'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankRequestForm.controls['name'].errors.required\">  \n\t                    Username is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <div class=\"form-group\">\n\t                <div class=\"form-label-group\">\n\t                   <input type=\"text\" id=\"adharAddress\" class=\"form-control\" placeholder=\"Wallet Address\" autofocus=\"autofocus\" formControlName=\"adharAddress\" #adharAddress>\n\t                    <label for=\"adharAddress\">Adhar Number</label>\n\t                </div>\n\t                <p *ngIf=\"bankRequestForm.controls['adharAddress'].invalid && (bankRequestForm.controls['adharAddress'].dirty || bankRequestForm.controls['adharAddress'].touched)\" class=\"alert-danger\">\n\t                  <span *ngIf=\"bankRequestForm.controls['adharAddress'].errors.required\">  \n\t                    Adhar number is required.  \n\t                  </span>  \n\t                </p>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"addBankRequest(name.value, adharAddress.value)\"  [disabled]=\"bankRequestForm.pristine || bankRequestForm.invalid\">Add</button>\n           </form>\n\n         </div>\n       </div>\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-request',\n  templateUrl: './add-request.component.html',\n  styleUrls: ['./add-request.component.css']\n})\nexport class AddRequestComponent implements OnInit {\n  bankRequestForm: FormGroup;\n  currentUser: User;\n\n  constructor(\n  \tprivate fb: FormBuilder,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) {\n    \tthis.bankForm();\n    \tthis.currentUser = this.authenticationService.currentUserValue;\n\n      console.log(this.currentUser.role_id);\n      if(this.currentUser.role_id == 1){\n        this.router.navigate(['home']);\n      }\n    }\n\n  bankForm(){\n    this.bankRequestForm = this.fb.group({\n      name: ['', Validators.required],\n      adharAddress: ['', Validators.required],\n    });\n  }\n\n  addBankRequest(name, adhareAddress){\n    this.ethereumService.addRequest(name, adhareAddress, this.currentUser.bank.wallet_address)\n    .then(async(result)=>{\n      console.log(result);\n      alert(\"Request for KYC has been added successfully.\");\n      this.router.navigate(['banks/requests']);\n    }).catch((error) =>{\n      console.log(\"addRequest error\", error.message);\n      alert(\"Something went wrong!\");\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card card-login mx-auto mt-5\">\n    <div class=\"card-header\">Login</div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"adminLoginForm\" novalidate>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"email\" class=\"form-control\" placeholder=\"Email address\" autofocus=\"autofocus\" formControlName=\"inputEmail\" id=\"inputEmail\" #inputEmail>\n            <label for=\"inputEmail\">Email address</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputEmail'].invalid && (adminLoginForm.controls['inputEmail'].dirty || adminLoginForm.controls['inputEmail'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.required\">\n              Email is required.\n            </span>\n            <span *ngIf=\"adminLoginForm.controls['inputEmail'].errors.email\">Enter a valid email address</span>\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-label-group\">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"inputPassword\" id=\"inputPassword\" #inputPassword>\n            <label for=\"inputPassword\">Password</label>\n          </div>\n          <p *ngIf=\"adminLoginForm.controls['inputPassword'].invalid && (adminLoginForm.controls['inputPassword'].dirty || adminLoginForm.controls['inputPassword'].touched)\" class=\"alert-danger\">\n            <span *ngIf=\"adminLoginForm.controls['inputPassword'].errors.required\">\n              Password is required.\n            </span>\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"checkbox\">\n            <label>\n              <input type=\"checkbox\" value=\"remember-me\">\n              Remember Password\n            </label>\n          </div>\n        </div>\n        <button type=\"submit\"  (click)=\"adminLogin(inputEmail.value, inputPassword.value)\" class=\"btn btn-primary btn-block\"   [disabled]=\"adminLoginForm.pristine || adminLoginForm.invalid\" >Login</button>\n      </form>\n      <div class=\"text-center\">\n        <!-- <a class=\"d-block small mt-3\" href=\"javascript:void(0);\" (click)=\"walletLogin();\">login with metamask</a> -->\n        <a class=\"d-block small\" href=\"forgot-password.html\">Forgot Password?</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms'; \nimport { AuthenticationService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport Web3 from 'web3';\n\ndeclare let window: any;\n//declare let ethereum: any;\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  web3: Web3 |  undefined = undefined;\n  adminLoginForm: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder, \n    private login: AuthenticationService, \n    public router: Router\n    ) { \n    this.loginForm();\n    if(this.login.isLoggedIn() == true){\n       this.router.navigate(['home']);\n    }\n  }\n\n  loginForm(){\n    this.adminLoginForm = this.fb.group({\n      inputEmail: ['', [Validators.required, Validators.email]],\n      inputPassword: ['', Validators.required] \n    });\n  }\n\n  adminLogin(inputEmail, inputPassword){\n  \tthis.login.adminLogin(inputEmail, inputPassword)\n    .pipe(first())\n    .subscribe(data => {\n      this.router.navigate(['home']);\n    });\n  }\n\n  walletLogin = async () =>{\n    if (!window.ethereum){\n       alert(\"Please install MetaMask first.\");\n    }\n      \n    if (!this.web3) {\n      try {\n        // Request account access if needed\n        await (window).ethereum.enable();\n\n        // We don't know window.web3 version, so we use our own instance of Web3\n        // with the injected provider given by MetaMask\n        this.web3 = new Web3((window).ethereum);\n      } catch (error) {\n        window.alert('You need to allow MetaMask.');\n        return;\n      }\n    }\n\n\n    const coinbase = await this.web3.eth.getCoinbase();\n    console.log(\"adddress\", coinbase);\n    if (!coinbase) {\n      alert('Please activate MetaMask first.');\n      return;\n    }\n\n    let nonce = this.web3.eth.getTransactionCount(coinbase);\n    const signature = await this.web3.eth.personal.sign(`I am signing my one-time nonce: ${nonce}`,\n        coinbase,\n        '' // MetaMask will ignore the password argument here\n      );\n\n    console.log(\"signature\", signature);\n\n  }\n\n  ngOnInit(): void {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.add('bg-dark');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { ListRequestComponent } from './list-request/list-request.component';\nimport { AddRequestComponent } from './add-request/add-request.component';\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\nimport { AuthGuard, RoleAuthGuard } from '@app/_helpers';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'login', component: AdminLoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'banks/add', component: AddBankComponent, canActivate: [AuthGuard, RoleAuthGuard] },\n  { path: 'banks', component: ListBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/view/:walletAddress', component: ViewBankComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests/add', component: AddRequestComponent, canActivate: [AuthGuard] },\n  { path: 'banks/requests', component: ListRequestComponent, canActivate: [AuthGuard] },\n  { path: 'customers/view', component: ViewCustomerComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'angular-app';\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  logout() {\n  \tthis.authenticationService.logout();\n  \tthis.router.navigate(['/login']);\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthInterceptor, ErrorInterceptor } from '@app/_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AddBankComponent } from './add-bank/add-bank.component';\nimport { ListBankComponent } from './list-bank/list-bank.component';\nimport { ViewBankComponent } from './view-bank/view-bank.component';\nimport { AddRequestComponent } from './add-request/add-request.component';\nimport { ListRequestComponent } from './list-request/list-request.component';\nimport { ViewCustomerComponent } from './view-customer/view-customer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    SidebarComponent,\n    FooterComponent,\n    AdminLoginComponent,\n    AddBankComponent,\n    ListBankComponent,\n    ViewBankComponent,\n    AddRequestComponent,\n    ListRequestComponent,\n    ViewCustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sticky Footer -->\n<footer class=\"sticky-footer\">\n  <div class=\"container my-auto\">\n      <div class=\"copyright text-center my-auto\">\n        <span>Copyright © Your Website 2018</span>\n      </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: User;\n\n  constructor(\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) {\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n\n  ngOnInit(){ }\n\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark static-top\">\n\n     <a class=\"navbar-brand mr-1\" href=\"index.html\">Start Bootstrap</a>\n\n     <button class=\"btn btn-link btn-sm text-white order-1 order-sm-0\" id=\"sidebarToggle\" href=\"#\">\n       <i class=\"fas fa-bars\"></i>\n     </button>\n\n     <!-- Navbar Search -->\n     <form class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n       <div class=\"input-group\">\n         <!--<input type=\"text\" class=\"form-control\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\">\n         <div class=\"input-group-append\">\n           <button class=\"btn btn-primary\" type=\"button\">\n             <i class=\"fas fa-search\"></i>\n           </button>\n         </div>-->\n       </div>\n     </form>\n\n     <!-- Navbar -->\n     <ul class=\"navbar-nav ml-auto ml-md-0\">\n       <li class=\"nav-item dropdown no-arrow\">\n         <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n           <i class=\"fas fa-user-circle fa-fw\"></i>\n         </a>\n         <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\n           <a class=\"dropdown-item\" href=\"#\">Settings</a>\n           <a class=\"dropdown-item\" href=\"#\">Activity Log</a>\n           <div class=\"dropdown-divider\"></div>\n           <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n         </div>\n       </li>\n     </ul>\n\n   </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, AuthenticationService } from '@app/_services';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  currentUser: User;\n  userFromApi: User;\n  \n  constructor(private userService: UserService, private authenticationService: AuthenticationService) { \n    this.currentUser = this.authenticationService.currentUserValue;\n    console.log(this.currentUser);\n  }\n\n  ngOnInit(){\n\n  \tconst body = document.getElementsByTagName('body')[0];\n    body.classList.remove('bg-dark');\n\n    this.loading = true;\n    this.userService.getById(this.currentUser.id).pipe(first()).subscribe( (user: any) => {\n      this.loading = false;\n      this.userFromApi = user.data;\n    });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n\n         <!-- Breadcrumbs-->\n         <ol class=\"breadcrumb\">\n           <li class=\"breadcrumb-item\">\n             <a href=\"/\">Dashboard</a>\n           </li>\n         </ol>\n\n         <div class=\"row\">\n            <div class=\"col-md-12 col-xl-12 col-sm-12\">\n              <div class=\"card mt-4\">\n                <h4 class=\"card-header\">Home</h4>\n                <div class=\"card-body\">\n                  <p>Your role is: <strong >{{ (currentUser.role_id == 1)? 'Admin' : 'Bank' }}</strong>.</p>\n                  <p *ngIf=\"userFromApi\" class=\"mb-1\">\n                    Current user from secure api end point: {{userFromApi.email}}\n                  </p>\n                </div>\n              </div>\n              <br>\n            </div>\n         </div>\n\n\n    </div>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-bank',\n  templateUrl: './list-bank.component.html',\n  styleUrls: ['./list-bank.component.css']\n})\nexport class ListBankComponent implements OnInit {\n  currentUser: User;\n  banksList:Array<Bank>;\n\n  constructor(\n  private spinner: NgxSpinnerService,\n  private bankService: BankService,\n  public router: Router,\n  private authenticationService: AuthenticationService,\n  private ethereumService: EthereumService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n    this.spinner.show();\n    this.bankService.listBank().pipe(first()).subscribe((res: any) => {\n      console.log(res);\n      if(res.success == 1){\n      \tthis.banksList = res.data;\n      }\n      this.spinner.hide();\n    },\n    error=>{ console.log(\"listBank\", error); });\n  }\n\n  deleteBank(walletAddress){\n    var result = confirm(\"Are you sure, want to delete bank?\");\n    if(result){\n      this.bankService.deleteBank(walletAddress).pipe(first()).subscribe((res: any) => {\n        if(res.success == 1){\n          this.ngOnInit();\n        }\n      },\n      error =>{\n        alert(\"Something went wrong, please try again after few minutes\");\n      });\n    }\n  }\n  \n  upvoteBank(walletAddress, bankSessionWalletAddress){\n     this.ethereumService.upvotebank(walletAddress, bankSessionWalletAddress).then((result) => {\n        alert(\"You have successfully voted for this bank\");\n        this.ngOnInit();\n     }).catch((error) => { console.log(\"upvotebank error\", error); });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Banks List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Banks Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"banksList?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Name</th>\n                <th>Registered Number</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr *ngFor=\"let bank of banksList; let num= index;\">\n                <td>{{ (num+1) }}</td>\n                <td>{{ bank.name }}</td>\n                <td>{{ bank.rg_number }}</td>\n                <td>\n                \t<a href=\"javascript:void(0)\" class=\"text-success\" (click)=\"router.navigate(['/banks/view', bank.wallet_address ]);\" title=\"View bank\">\n                    <i class=\"fas fa-fw fa-eye\"></i>\n                  </a> &nbsp;\n                \t<a *ngIf=\"currentUser.role_id == 1\" href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBank(bank.wallet_address);\" title=\"Remove bank\">\n                    <i class=\"fas fa-fw fa-trash\"></i>\n                  </a> &nbsp;\n                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"tex-primary\" (click)=\"upvoteBank(bank.wallet_address, currentUser.bank.wallet_address)\" title=\"Rating bank\">\n                    <i class=\"fas fa-fw fa-chevron-circle-up\"></i>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!banksList?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n    <!-- Breadcrumbs-->\n     <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">Bank Requests List</li>\n     </ol>\n    <!-- DataTables Example -->\n    <div class=\"card mb-3\">\n      <div class=\"card-header\">\n        <i class=\"fas fa-table\"></i>\n        Bank Requests Data\n      </div>\n      <div class=\"card-body\">\n        <div class=\"table-responsive\" *ngIf=\"bankRequestLists?.length > 0\">\n          <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n            <thead>\n              <tr>\n                <th>Username</th>\n                <th>Adhar Number</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              <tr *ngFor=\"let bankRequest of bankRequestLists;\">\n                <td>{{ bankRequest.username }}</td>\n                <td>{{ bankRequest.user_data }}</td>\n                <td>\n                \t<a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"text-warning\" (click)=\"approveBankRequest(bankRequest.username, bankRequest.user_data, bankRequest.wallet_address);\" title=\"Approve\">\n                    <i class=\"fas fa-fw fa-check\"></i>\n                  </a>&nbsp;\n                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"text-danger\"  (click)=\"deleteBankRequest(bankRequest.username, bankRequest.user_data, bankRequest.wallet_address);\"  title=\"Remove\">\n                    <i class=\"fas fa-fw fa-trash\"></i>\n                  </a>\n                </td>\n              </tr>\n              <tr>\n                <td colspan=\"3\" class=\"text-center\" *ngIf=\"last < total\">\n                  <a href=\"javascript:void(0)\" (click)=\"loadRequests()\">Load More</a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"table-responsive text-center\" *ngIf=\"!bankRequestLists?.length\">\n        \t<p>No Records Found</p>\n        </div>\n      </div>\n    </div>\n    </div>\n  <!-- /.container-fluid -->\n   </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n<i class=\"fas fa-angle-up\"></i>\n</a>\n<ngx-spinner></ngx-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, BankRequest } from '@app/_models';\nimport { first} from 'rxjs/operators';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-list-request',\n  templateUrl: './list-request.component.html',\n  styleUrls: ['./list-request.component.css']\n})\nexport class ListRequestComponent implements OnInit {\n  currentUser: User;\n  bankRequestLists: Array<BankRequest>;\n  wallet_address;\n  perload;\n  total;\n  last;\n\n  constructor(\n    private spinner: NgxSpinnerService,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  ) {\n    this.last = 0;\n    this.bankRequestLists = [];\n    this.total = 0; this.perload = 10;\n    this.currentUser = this.authenticationService.currentUserValue;\n    if(this.currentUser.role_id == 2){\n      this.wallet_address = this.currentUser.bank.wallet_address;\n    } else{\n      this.wallet_address = null;\n    }\n  }\n\n  approveBankRequest(username, data, wallet_address){\n    this.ethereumService.addCustomer(username, data, wallet_address).then((result)=>{\n      alert(\"Approved successfully\");\n      this.ngOnInit();\n    }).catch((error) =>{\n      console.log(\"approval error\", error);\n      alert(\"Something went wrong please try again!\");\n    });\n  }\n\n  deleteBankRequest(username, data, wallet_address){\n  \tvar con = confirm(\"Are you sure, want to delete bank kyc request?\");\n  \tif(con){\n  \t\tthis.ethereumService.removeRequest(username, data, wallet_address).then((result)=>{\n        alert(\"Removed successfully\");\n        this.ngOnInit();\n\t  \t}).catch((error) =>{\n\t  \t  console.log(\"removal error\", error);\n\t      alert(\"Something went wrong please try again!\");\n\t  \t});\n  \t}\n  }\n\n  async loadRequests(){\n    let i, cnt = 0, results = [];\n    while(cnt<this.perload && this.last < this.total){\n      try{\n        results[this.last] = await this.ethereumService.getBankRequest(this.wallet_address,this.last)\n        console.log((results[this.last][2]));\n        if((results[this.last][2])!=\"0x0000000000000000000000000000000000000000\" && results[this.last][3]){\n          this.bankRequestLists.push({\n            username:this.ethereumService.web3.utils.hexToString(results[this.last][0]),\n            user_data:this.ethereumService.web3.utils.hexToString(results[this.last][1]),\n            wallet_address:results[this.last][2], is_active:results[this.last][3]\n          });\n          cnt++;\n        }\n        this.last++;\n      } catch(e){\n        console.log(\"getBankRequest error\",e);\n        this.last++;\n      }\n    }\n  }\n\n  ngOnInit(){\n    this.last = 0;\n    this.bankRequestLists = [];\n    this.total = 0; this.perload = 10;\n    this.spinner.show();\n    this.ethereumService.getBankRequestsNum(this.wallet_address).then(result=>{\n      this.total = result;\n      this.loadRequests();\n      this.spinner.hide();\n    }).catch(e=>{\n      console.log(\"getBankRequestsNum error\", e);\n      alert(\"Something went wrong please try again!\");\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '@app/_services';\nimport { User } from '@app/_models';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  currentUser: User;\n\n  constructor( private router: Router, private authenticationService: AuthenticationService){\n  \t this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  \n  get isAdmin() {\n    return this.currentUser && this.currentUser.role_id == 1;\n  }\n\n  get isBank() {\n    return this.currentUser && this.currentUser.role_id == 2;\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Sidebar -->\n<ul class=\"sidebar navbar-nav\">\n\n  <li class=\"nav-item active\">\n   <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">\n     <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n     <span> Dashboard</span>\n   </a>\n  </li>\n\n  <li class=\"nav-item dropdown\"  >\n   <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n     <i class=\"fas fa-fw fa-landmark\"></i>\n     <span> Banks</span>\n   </a>\n   <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n     <a class=\"dropdown-item\" routerLink=\"/banks\">List</a>\n     <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/banks/add\">Add</a>\n   </div>\n  </li>\n\n  <li *ngIf=\"!isAdmin\" class=\"nav-item dropdown\">\n   <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n     <i class=\"fas fa-fw fa-check-circle\"></i>\n     <span> KYC Requests</span>\n   </a>\n   <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n     <a class=\"dropdown-item\" routerLink=\"/banks/requests\">List</a>\n     <a class=\"dropdown-item\" *ngIf=\"isBank\" routerLink=\"/banks/requests/add\">Add</a>\n   </div>\n  </li>\n\n  <li *ngIf=\"!isAdmin\" class=\"nav-item dropdown\">\n   <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" href=\"#\" id=\"pagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n     <i class=\"fas fa-fw fa-users\"></i>\n     <span> Customers </span>\n   </a>\n   <div class=\"dropdown-menu\" aria-labelledby=\"pagesDropdown\">\n     <a class=\"dropdown-item\" *ngIf=\"isBank\" routerLink=\"/customers/view\">View</a>\n   </div>\n  </li>\n\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-bank',\n  templateUrl: './view-bank.component.html',\n  styleUrls: ['./view-bank.component.css']\n})\nexport class ViewBankComponent implements OnInit {\n  currentUser: User;\n  bankData: Bank;\n\n  constructor(\n  \tprivate bankService: BankService,\n  \tprivate route: ActivatedRoute,\n    public router: Router,\n    private authenticationService: AuthenticationService,\n    private ethereumService: EthereumService\n  \t) {\n  \tthis.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(){\n  \tthis.route.params.subscribe(params => {\n        this.ethereumService.getBank(params['walletAddress']).then((result) => {\n           result[0] = this.ethereumService.web3.utils.hexToString(result[0]);\n           result[4] = this.ethereumService.web3.utils.hexToString(result[4]);\n           this.bankData = result;\n        }).catch((error) => {\n           console.log(error);\n        });\n  \t});\n  }\n\n  deleteBank(walletAddress){\n    var result = confirm(\"Are you sure, want to delete bank?\");\n    if(result){\n      this.bankService.deleteBank(walletAddress).pipe(first()).subscribe((res: any) => {\n        if(res.success == 1){\n          this.ngOnInit();\n        }\n      },\n      error =>{\n        alert(\"Something went wrong, please try again after few minutes\");\n      });\n    }\n  }\n\n\n  upvoteBank(walletAddress, bankSessionWalletAddress){\n     this.ethereumService.upvotebank(walletAddress, bankSessionWalletAddress).then((result) => {\n        alert(\"You have successfully voted for this bank\");\n        this.ngOnInit();\n     }).catch((error) => {\n        console.log(\"error\", error);\n     });\n  }\n\n}\n","<app-header></app-header>\n<div id=\"wrapper\">\n\t<app-sidebar class=\"sidebar\"></app-sidebar>\n\t<div id=\"content-wrapper\">\n\t\t<app-footer></app-footer>\n\t\t<div class=\"container-fluid\">\n\t\t\t<!-- Breadcrumbs-->\n\t    <ol class=\"breadcrumb\">\n\t       <li class=\"breadcrumb-item\">\n\t         <a href=\"/\">Dashboard</a>\n\t       </li>\n\t       <li class=\"breadcrumb-item\"><a href=\"/banks\">Banks List</a></li>\n\t       <li class=\"breadcrumb-item active\">Bank View</li>\n\t    </ol>\n\t    <!-- DataTables Example -->\n\t    <div class=\"row\">\n        <div class=\"col-sm-8 offset-md-2\">\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<div class=\"card-header\">\n\t\t\t\t\t\t\t<i class=\"fas fa-table\"></i>\n\t\t\t\t\t\t\tBank Data\n\t\t\t\t\t\t</div>\n            <div class=\"card-body table-responsive\" *ngIf=\"bankData\">\n\t\t\t\t\t\t\t<table class=\"table table-bordered\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Bank Name</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[0] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Registration Number</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[4] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Wallet address</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[1] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Rating</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{{  bankData[2] }} &nbsp;\n\t                  <a *ngIf=\"currentUser.role_id == 2\" href=\"javascript:void(0)\" class=\"tex-primary\" (click)=\"upvoteBank(bankData[1], currentUser.bank.wallet_address)\" title=\"Rating bank\">\n\t                    <i class=\"fas fa-fw fa-chevron-circle-up\"></i>\n\t                  </a>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>KYC Count</th>\n\t\t\t\t\t\t\t\t\t<td>{{  bankData[3] }}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr *ngIf=\"currentUser.role_id == 1\">\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteBank(bankData[1]);\" title=\"Remove bank\">\n                    \t<i class=\"fas fa-fw fa-trash\"></i>\n                  \t</a>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n            </div>\n\t\t\t    </div>\n\t\t\t\t\t<br>\n\t\t\t\t</div>\n\t    </div>\n\t\t</div>\n\t</div>\n</div>\n","<app-header></app-header>\n<div id=\"wrapper\">\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  <div id=\"content-wrapper\">\n    <app-footer></app-footer>\n    <div class=\"container-fluid\">\n      <!-- Breadcrumbs-->\n      <ol class=\"breadcrumb\">\n       <li class=\"breadcrumb-item\">\n         <a href=\"/\">Dashboard</a>\n       </li>\n       <li class=\"breadcrumb-item active\">View Customer</li>\n      </ol>\n      <div class=\"row\">\n\n        <div class=\"col-sm-6\">\n          <div class=\"card card-register mx-auto mt-5\">\n            <div class=\"card-header\"></div>\n            <div class=\"card-body table-responsive\">\n\n             <form [formGroup]=\"viewCustomerForm\" novalidate>\n             \t    <div class=\"form-group\">\n                    <div class=\"form-label-group\">\n                       <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Bank name\" autofocus=\"autofocus\" formControlName=\"name\" #name >\n                       <label for=\"name\">Username</label>\n                    </div>\n                    <p *ngIf=\"viewCustomerForm.controls['name'].invalid && (viewCustomerForm.controls['name'].dirty || viewCustomerForm.controls['name'].touched)\" class=\"alert-danger\">\n                      <span *ngIf=\"viewCustomerForm.controls['name'].errors.required\">\n                        Username is required.\n                      </span>\n                    </p>\n                  </div>\n                  <div class=\"form-group\">\n                    <div class=\"form-label-group\">\n                       <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" autofocus=\"autofocus\" formControlName=\"password\" #password autocomplete=\"false\">\n                       <label for=\"password\">Password</label>\n                    </div>\n                    <p *ngIf=\"viewCustomerForm.controls['password'].invalid && (viewCustomerForm.controls['password'].dirty || viewCustomerForm.controls['password'].touched)\" class=\"alert-danger\">\n                      <span *ngIf=\"viewCustomerForm.controls['password'].errors.required\">\n                        Password is required.\n                      </span>\n                    </p>\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"viewCustomer(name.value, password.value)\"  [disabled]=\"viewCustomerForm.pristine || viewCustomerForm.invalid\">Get</button>\n             </form>\n\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"displayCustomer.aadhaar_number\" class=\"col-sm-6\">\n          <div class=\"card card-register mx-auto mt-5\">\n            <div class=\"card-header\"></div>\n            <div class=\"card-body table-responsive\">\n\n             <table class=\"table table-bordered\">\n               <tr>\n                 <th>Username</th>\n                 <td>{{displayCustomer.username}}</td>\n               </tr>\n               <tr>\n                 <th>Aadhaar address</th>\n                 <td>{{displayCustomer.aadhaar_number}}</td>\n               </tr>\n               <tr>\n                 <th>Rating</th>\n                 <td>{{displayCustomer.rating}}</td>\n               </tr>\n               <tr *ngIf=\"currentUser.role_id == 2\">\n                 <th>Actions</th>\n                 <td>\n                    <a href=\"javascript:void(0)\" class=\"text-secondary\" (click)=\"accessHistory(displayCustomer.username)\" title=\"Access History\">\n                      <i class=\"fas fa-fw fa-history\"></i>\n                    </a>&nbsp;\n                  \t<a href=\"javascript:void(0)\" class=\"text-primary\" (click)=\"upvoteCustomer(displayCustomer.username)\" title=\"Rating customer\">\n                      <i class=\"fas fa-fw fa-chevron-circle-up\"></i>\n                    </a>&nbsp;\n                  \t<a href=\"javascript:void(0)\" class=\"text-warning\" (click)=\"updateCustomer()\" title=\"Edit customer\">\n                      <i class=\"fas fa-fw fa-edit\"></i>\n                    </a>&nbsp;\n                    <a href=\"javascript:void(0)\" class=\"text-warning\" (click)=\"updateCustomerPassword()\" title=\"Set Password\">\n                      <i class=\"fas fa-fw fa-key\"></i>\n                    </a>&nbsp;\n                    <a href=\"javascript:void(0)\" class=\"text-danger\" (click)=\"deleteCustomer(displayCustomer.username)\" title=\"Remove customer\">\n                      <i class=\"fas fa-fw fa-trash\"></i>\n                    </a>\n                 </td>\n               </tr>\n             </table>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n    <br>\n    <!-- /.container-fluid -->\n  </div>\n</div>\n<!-- Scroll to Top Button-->\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n  <i class=\"fas fa-angle-up\"></i>\n</a>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { BankService, AuthenticationService, EthereumService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { User, Bank } from '@app/_models';\nimport { first} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-customer',\n  templateUrl: './view-customer.component.html',\n  styleUrls: ['./view-customer.component.css']\n})\nexport class ViewCustomerComponent implements OnInit {\n  viewCustomerForm: FormGroup;\n  currentUser: User;\n  displayCustomer;\n  wallet_address;\n\n  constructor(\n  \tprivate fb: FormBuilder,\n  \tprivate bankService: BankService,\n  \tpublic router: Router,\n  \tprivate authenticationService: AuthenticationService,\n  \tprivate ethereumService: EthereumService\n  \t) {\n      this.displayCustomer = {username:null, aadhaar_number:null, rating:null};\n    \tthis.custForm();\n    \tthis.currentUser = this.authenticationService.currentUserValue;\n      this.wallet_address = this.currentUser.bank.wallet_address;\n      console.log(this.currentUser.role_id);\n      if(this.currentUser.role_id == 1){\n        this.router.navigate(['home']);\n      }\n    }\n\n  custForm(){\n    this.viewCustomerForm = this.fb.group({\n      name: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  viewCustomer(name, password){\n    this.ethereumService.viewCustomer(name, password, this.currentUser.bank.wallet_address)\n    .then(async (result)=>{\n      if(result){\n        this.displayCustomer.username = name;\n        this.displayCustomer.password = password;\n        this.displayCustomer.aadhaar_number = this.ethereumService.web3.utils.hexToString(result);\n        this.displayCustomer.rating = await this.ethereumService.getCustRating(name,this.wallet_address);\n      } else {\n        alert(\"Customer not present\")\n      }\n    }).catch((error) =>{\n      console.log(\"viewCustomer error\", error.message);\n      alert(\"Something went wrong!\");\n    });\n  }\n\n  upvoteCustomer(username){\n  \tthis.ethereumService.upvoteCust(username,this.wallet_address).then( async(result)=>{\n        let rating = await this.ethereumService.getCustRating(username, this.wallet_address);\n        alert(\"You have voted successfully\");\n        this.ngOnInit();\n  \t}).catch((error) => {\n        alert(\"Something went wrong please try again in few minutes!\");\n  \t});\n  }\n\n  deleteCustomer(username){\n    var del = confirm(\"Are you sure, want to remove this customer?\");\n    if(del){\n      this.ethereumService.removeCustomer(username, this.wallet_address).then((result)=>{\n        alert(\"You have deleted customer successfully\");\n        this.ngOnInit();\n      }).catch((error)=>{\n        alert(\"Something went wrong please try again in few minutes!\");\n      });\n    } else{\n      this.ngOnInit();\n    }\n\n  }\n\n  accessHistory(username){\n    this.ethereumService.customerAccessHistory(username, this.wallet_address).then((result)=>{\n      alert(\"This customer accessed by bank address \"+result);\n    }).catch((error)=>{\n      console.log(\"access history error\", error);\n    });\n  }\n\n  async updateCustomer(){\n    try{\n      var aadhaar_number = prompt(\"Please enter new aadhaar number:\", \"\");\n      if ( aadhaar_number == null || aadhaar_number == \"\") {\n        // do nothing\n      } else {\n        await this.ethereumService.modifyCustomer(this.displayCustomer.username, this.displayCustomer.password, aadhaar_number, this.wallet_address);\n        alert(\"Customer record has been updated\");\n        this.ngOnInit();\n      }\n    } catch(e){\n      console.log(\"updateCustomer error\", e);\n      alert(\"Something went wrong\");\n    }\n  }\n\n  async updateCustomerPassword(){\n    try{\n      var password = prompt(\"Please enter new password:\", \"\");\n      if (password == null || password == \"\") {\n        // do nothing\n      } else {\n        await this.ethereumService.setCustPassword(this.displayCustomer.username, password, this.wallet_address);\n        alert(\"Customer record has been updated\");\n        this.ngOnInit();\n      }\n    } catch(e){\n      console.log(\"updateCustomer error\", e);\n      alert(\"Something went wrong\");\n    }\n  }\n\n  ngOnInit(): void {\n    this.displayCustomer = {username:null, aadhaar_number:null};\n    this.custForm();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl2: 'http://kyc.local',\n  apiUrl: 'http://localhost:3002',\n  RPCProvider: 'http://127.0.0.1:7545',\n  ContractAddress : '0x06Aa76a46443244D4092181BC18545bBaF5a8e11',\n  WalletAddress : '0xc9eCB58B4c96DE1fC48d41B4ef3D4421F6d52aF5'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}